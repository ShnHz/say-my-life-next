import{_ as o,o as p,c as e,C as a,a as n,S as l}from"./chunks/framework.7114eebe.js";const w=JSON.parse('{"title":"无头浏览器 Puppeteer 初探","description":"","frontmatter":{"title":"无头浏览器 Puppeteer 初探","date":"2023/06/11 23:52:07","summary":null,"config":{"show":true,"top":false,"dir":true,"dirTag":["h3","h4","h5"],"tag":["info","js","nodejs","tool"],"valine":true,"valineId":null},"password":false,"outline":[3,5]},"headers":[],"relativePath":"views/blog/js/WuTouLiuLanQiPuppeteerChuTan.md","filePath":"views/blog/js/WuTouLiuLanQiPuppeteerChuTan.md"}'),t={name:"views/blog/js/WuTouLiuLanQiPuppeteerChuTan.md"},c={class:"markdown-body cache html"},r={target:"_blank",href:"https://link.juejin.cn?target=https%3A%2F%2Fchromedevtools.github.io%2Fdevtools-protocol%2F",title:"https://chromedevtools.github.io/devtools-protocol/",ref:"nofollow noopener noreferrer"},D={target:"_blank",href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Flaispace%2Fpuppeteer-explore%2Fblob%2Fmaster%2Fdemo%2Fsave-screenshot.js",title:"https://github.com/laispace/puppeteer-explore/blob/master/demo/save-screenshot.js",ref:"nofollow noopener noreferrer"},y={target:"_blank",href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Flaispace%2Fpuppeteer-explore%2Fblob%2Fmaster%2Fdemo%2Fsave-pdf.js",title:"https://github.com/laispace/puppeteer-explore/blob/master/demo/save-pdf.js",ref:"nofollow noopener noreferrer"},F={target:"_blank",href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Flaispace%2Fpuppeteer-explore%2Fblob%2Fmaster%2Fdemo%2Fevalute-script.js",title:"https://github.com/laispace/puppeteer-explore/blob/master/demo/evalute-script.js",ref:"nofollow noopener noreferrer"},i={target:"_blank",href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Flaispace%2Fpuppeteer-explore%2Fblob%2Fmaster%2Fdemo%2Fauto-submit-form.js",title:"https://github.com/laispace/puppeteer-explore/blob/master/demo/auto-submit-form.js",ref:"nofollow noopener noreferrer"},B={target:"_blank",href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Flaispace%2Fpuppeteer-explore%2Fblob%2Fmaster%2Fdemo%2Fcraw-spa.js",title:"https://github.com/laispace/puppeteer-explore/blob/master/demo/craw-spa.js",ref:"nofollow noopener noreferrer"},d={target:"_blank",href:"https://link.juejin.cn?target=http%3A%2F%2Fwww.ituring.com.cn%2F",title:"http://www.ituring.com.cn/",ref:"nofollow noopener noreferrer"},A={target:"_blank",href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Flaispace%2Fpuppeteer-explore%2Fblob%2Fmaster%2Fdemo%2Fdownload-ituring-books.js",title:"https://github.com/laispace/puppeteer-explore/blob/master/demo/download-ituring-books.js",ref:"nofollow noopener noreferrer"},E={target:"_blank",href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2FProtoTeam%2Fblog%2Fblob%2Fmaster%2F201710%2F2.md",title:"https://github.com/ProtoTeam/blog/blob/master/201710/2.md",ref:"nofollow noopener noreferrer"};function u(g,s,h,b,f,m){return p(),e("div",null,[s[20]||(s[20]=a("h6",{id:"原文-掘金",tabindex:"-1"},[n("原文 "),a("a",{href:"https://juejin.cn/post/6844903504276881422",target:"_blank",rel:"noreferrer"},"掘金"),n(),a("a",{class:"header-anchor",href:"#原文-掘金","aria-label":'Permalink to "原文 [掘金](https://juejin.cn/post/6844903504276881422)"'},"​")],-1)),a("div",c,[s[11]||(s[11]=l("<blockquote><p>作者简介 felix 蚂蚁金服·数据体验技术团队</p></blockquote><p>我们日常使用浏览器的步骤为：启动浏览器、打开一个网页、进行交互。而<code>无头浏览器</code>指的是我们使用脚本来执行以上过程的浏览器，能模拟真实的浏览器使用场景。</p><p>有了无头浏览器，我们就能做包括但不限于以下事情：</p><ul><li>对网页进行截图保存为图片或 pdf</li><li>抓取单页应用(SPA)执行并渲染(解决传统 HTTP 爬虫抓取单页应用难以处理异步请求的问题)</li><li>做表单的自动提交、UI的自动化测试、模拟键盘输入等</li><li>用浏览器自带的一些调试工具和性能分析工具帮助我们分析问题</li><li>在最新的无头浏览器环境里做测试、使用最新浏览器特性</li><li>写爬虫做你想做的事情~</li></ul><p>无头浏览器很多，包括但不限于:</p><ul><li>PhantomJS, 基于 Webkit</li><li>SlimerJS, 基于 Gecko</li><li>HtmlUnit, 基于 Rhnio</li><li>TrifleJS, 基于 Trident</li><li>Splash, 基于 Webkit</li></ul>",6)),a("p",null,[s[0]||(s[0]=n("本文主要介绍 Google 提供的无头浏览器(headless Chrome), 他基于 ")),a("a",r,"Chrome DevTools protocol",512),s[1]||(s[1]=n(" 提供了不少高度封装的接口方便我们控制浏览器。"))]),s[12]||(s[12]=l(`<h2 id="简单的代码示例" tabindex="-1">简单的代码示例 <a class="header-anchor" href="#简单的代码示例" aria-label="Permalink to &quot;简单的代码示例&quot;">​</a></h2><blockquote><p>为了能使用 <code>async</code>/<code>await</code> 等新特性，需要使用 v7.6.0 或更高版本的 Node.</p></blockquote><h3 id="启动-关闭浏览器、打开页面" tabindex="-1">启动/关闭浏览器、打开页面 <a class="header-anchor" href="#启动-关闭浏览器、打开页面" aria-label="Permalink to &quot;启动/关闭浏览器、打开页面&quot;">​</a></h3><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 启动浏览器</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> browser </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">await</span><span style="color:#BABED8;"> puppeteer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">launch</span><span style="color:#89DDFF;">({</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        </span><span style="color:#676E95;font-style:italic;">// 关闭无头模式，方便我们看到这个无头浏览器执行的过程</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        </span><span style="color:#676E95;font-style:italic;">// headless: false,</span></span>
<span class="line"><span style="color:#BABED8;">        timeout</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">30000</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 默认超时为30秒，设置为0则表示不设置超时</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    </span><span style="color:#676E95;font-style:italic;">// 打开空白页面</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> page </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">await</span><span style="color:#BABED8;"> browser</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">newPage</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    </span><span style="color:#676E95;font-style:italic;">// 进行交互</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    </span><span style="color:#676E95;font-style:italic;">// 关闭浏览器</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    </span><span style="color:#676E95;font-style:italic;">// await browser.close();</span></span></code></pre></div><h3 id="设置页面视窗大小" tabindex="-1">设置页面视窗大小 <a class="header-anchor" href="#设置页面视窗大小" aria-label="Permalink to &quot;设置页面视窗大小&quot;">​</a></h3><div class="language-arduino"><button title="Copy Code" class="copy"></button><span class="lang">arduino</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">// 设置浏览器视窗</span></span>
<span class="line"><span style="color:#babed8;">    page.setViewport({</span></span>
<span class="line"><span style="color:#babed8;">        width: 1376,</span></span>
<span class="line"><span style="color:#babed8;">        height: 768,</span></span>
<span class="line"><span style="color:#babed8;">    });</span></span></code></pre></div><h3 id="输入网址" tabindex="-1">输入网址 <a class="header-anchor" href="#输入网址" aria-label="Permalink to &quot;输入网址&quot;">​</a></h3><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 地址栏输入网页地址</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">goto</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://google.com/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        </span><span style="color:#676E95;font-style:italic;">// 配置项</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        </span><span style="color:#676E95;font-style:italic;">// waitUntil: &#39;networkidle&#39;, // 等待网络状态为空闲的时候才继续执行</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">});</span></span></code></pre></div><h3 id="保存网页为图片" tabindex="-1">保存网页为图片 <a class="header-anchor" href="#保存网页为图片" aria-label="Permalink to &quot;保存网页为图片&quot;">​</a></h3><p>打开一个网页，然后截图保存到本地：</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">screenshot</span><span style="color:#89DDFF;">({</span></span>
<span class="line"><span style="color:#BABED8;">    path</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">path/to/saved.png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre></div>`,11)),a("p",null,[a("a",D,"完整示例代码",512)]),s[13]||(s[13]=l(`<h3 id="保存网页为-pdf" tabindex="-1">保存网页为 pdf <a class="header-anchor" href="#保存网页为-pdf" aria-label="Permalink to &quot;保存网页为 pdf&quot;">​</a></h3><p>打开一个网页，然后保存 pdf 到本地：</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pdf</span><span style="color:#89DDFF;">({</span></span>
<span class="line"><span style="color:#BABED8;">     path</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">path/to/saved.pdf</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    format</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">A4</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 保存尺寸</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre></div>`,3)),a("p",null,[a("a",y,"完整示例代码",512)]),s[14]||(s[14]=l(`<h3 id="执行脚本" tabindex="-1">执行脚本 <a class="header-anchor" href="#执行脚本" aria-label="Permalink to &quot;执行脚本&quot;">​</a></h3><p>要获取打开的网页中的宿主环境，我们可以使用 <code>Page.evaluate</code> 方法：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 获取视窗信息</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> dimensions </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">evaluate</span><span style="color:#BABED8;">(() </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    return </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">width</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">document</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">documentElement</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">clientWidth</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">height</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">document</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">documentElement</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">clientHeight</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">deviceScaleFactor</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">window</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">devicePixelRatio</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">视窗信息:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> dimensions)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 获取 html</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 获取上下文句柄</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> htmlHandle </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 执行计算</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> html </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">evaluate</span><span style="color:#BABED8;">(body </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt; body</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">outerHTML</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> htmlHandle)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 销毁句柄</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> htmlHandle</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dispose</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">html:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> html)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p><code>Page.$</code> 可以理解为我们常用的 <code>document.querySelector</code>, 而 <code>Page.?</code> 则对应 <code>document.querySelectorAll</code>。</p>`,4)),a("p",null,[a("a",F,"完整示例代码",512)]),s[15]||(s[15]=l(`<h3 id="自动提交表单" tabindex="-1">自动提交表单 <a class="header-anchor" href="#自动提交表单" aria-label="Permalink to &quot;自动提交表单&quot;">​</a></h3><p>打开谷歌首页，输入关键字，回车进行搜索：</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 地址栏输入网页地址</span></span>
<span class="line"><span style="color:#89DDFF;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">goto</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://google.com/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    waitUntil</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">networkidle</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 等待网络状态为空闲的时候才继续执行</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 聚焦搜索框</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// await page.click(&#39;#lst-ib&#39;);</span></span>
<span class="line"><span style="color:#89DDFF;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">focus</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#lst-ib</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输入搜索关键字</span></span>
<span class="line"><span style="color:#89DDFF;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">type</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">辣子鸡</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">   delay</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 控制 keypress 也就是每个字母输入的间隔</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 回车</span></span>
<span class="line"><span style="color:#89DDFF;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">press</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Enter</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2017/10/17/808030a25211446b8903281b9427c321~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.image" loading="lazy"><figcaption></figcaption></figure><p></p>`,6)),a("p",null,[a("a",i,"完整示例代码",512)]),s[16]||(s[16]=l(`<h2 id="复杂点的代码示例" tabindex="-1">复杂点的代码示例 <a class="header-anchor" href="#复杂点的代码示例" aria-label="Permalink to &quot;复杂点的代码示例&quot;">​</a></h2><p>每一个简单的动作连接起来，就是一连串复杂的交互，接下来我们看两个更具体的示例。</p><h3 id="抓取单页应用-模拟饿了么外卖下单" tabindex="-1">抓取单页应用: 模拟饿了么外卖下单 <a class="header-anchor" href="#抓取单页应用-模拟饿了么外卖下单" aria-label="Permalink to &quot;抓取单页应用: 模拟饿了么外卖下单&quot;">​</a></h3><p>传统的爬虫是基于 HTTP 协议，模拟 UserAgent 发送 http 请求，获取到 html 内容后使用正则解析出需要抓取的内容，这种方式面对服务端渲染直出 html 的网页时非常便捷。</p><p>但遇到单页应用(SPA)时，或遇到登录校验时，这种爬虫就显得比较无力。</p><p>而使用无头浏览器，抓取网页时完全使用了人机交互时的操作，所以页面的初始化完全能使用宿主浏览器环境渲染完备，不再需要关心这个单页应用在前端初始化时需要涉及哪些 HTTP 请求。</p><p>无头浏览器提供的各种点击、输入等指令，完全模拟人的点击、输入等指令，也就再也不用担心正则写不出来了啊哈哈哈</p><p>当然，有些场景下，使用传统的 HTTP 爬虫(写正则匹配) 还是比较高效的。</p><p>在这里就不再详细对比这些差异了，以下这个例子仅作为展示模拟一个完整的人机交互：使用移动版饿了么点外卖。</p><p>先看下效果：</p><p></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2017/10/17/bcb3d48bb1c8a075d9a938c43e291bfa~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.image" loading="lazy"><figcaption></figcaption></figure><p></p><p>代码比较长就不全贴了，关键是几行：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> puppeteer </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">puppeteer</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> devices </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">puppeteer/DeviceDescriptors</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> iPhone6 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> devices[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">iPhone 6</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">启动浏览器</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> browser </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> puppeteer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">launch</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">打开页面</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> page </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> browser</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">newPage</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 模拟移动端设备</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emulate</span><span style="color:#BABED8;">(iPhone6)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">地址栏输入网页地址</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">goto</span><span style="color:#BABED8;">(url)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">等待页面准备好</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">waitForSelector</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.search-wrapper .search</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">点击搜索框</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tap</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.search-wrapper .search</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">type</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">麦当劳</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">delay</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 每个字母之间输入的间隔</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">回车开始搜索</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tap</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">button</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">等待搜素结果渲染出来</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">waitForSelector</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[class^=&quot;index-container&quot;]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">找到搜索到的第一家外卖店！</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tap</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[class^=&quot;index-container&quot;]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">等待菜单渲染出来</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">waitForSelector</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[class^=&quot;fooddetails-food-panel&quot;]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">直接选一个菜品吧</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tap</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[class^=&quot;fooddetails-cart-button&quot;]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// console.log(&#39;===为了看清楚，傲娇地等两秒===&#39;);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">waitFor</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">2000</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tap</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[class^=submit-btn-submitbutton]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 关闭浏览器</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> browser</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>关键步骤是：</p><ul><li>加载页面</li><li>等待需要点击的 DOM 渲染出来后点击</li><li>继续等待下一步需要点击的 DOM 渲染出来再点击</li></ul><p>关键的几个指令：</p><ul><li><code>page.tap</code>(或 <code>page.click</code>) 为点击</li><li><code>page.waitForSelector</code> 意思是等待指定元素出现在网页中，如果已经出现了，则立即继续执行下去, 后面跟的参数为 <code>selector</code> 选择器，与我们常用的 <code>document.querySelector</code> 接收的参数一致</li><li><code>page.waitFor</code> 后面可以传入 <code>selector</code> 选择器、<code>function</code> 函数或 <code>timeout</code> 毫秒时间，如 <code>page.waitFor(2000)</code> 指等待2秒再继续执行，例子中用这个函数暂停操作主要是为了演示</li></ul><p>以上几个指令都可接受一个 <code>selector</code> 选择器作为参数，这里额外介绍几个方法：</p><ul><li><code>page.$(selector)</code> 与我们常用的 <code>document.querySelector(selector)</code> 一致，返回的是一个 <code>ElementHandle</code> 元素句柄</li><li><code>page.?(selector)</code> 与我们常用的 <code>document.querySelectorAll(selector)</code> 一致，返回的是一个数组</li></ul><p>在有头浏览器上下文中，我们选择一个元素的方法是：</p><div class="language-ini"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">const </span><span style="color:#F07178;">body</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> document.querySelector(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">body</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#676E95;font-style:italic;">;</span></span>
<span class="line"><span style="color:#BABED8;">const </span><span style="color:#F07178;">bodyInnerHTML</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> body.innerHTML</span><span style="color:#676E95;font-style:italic;">;</span></span>
<span class="line"><span style="color:#BABED8;">console.log(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bodyInnerHTML: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">, bodyInnerHTML)</span><span style="color:#676E95;font-style:italic;">;</span></span></code></pre></div><p>而在无头浏览器里，我们首先需要获取一个句柄，通过句柄获取到环境中的信息后，销毁这个句柄。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 获取 html</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 获取上下文句柄</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> bodyHandle </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">body</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 执行计算</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> bodyInnerHTML </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">evaluate</span><span style="color:#BABED8;">(dom </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt; dom</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">innerHTML</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> bodyHandle)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 销毁句柄</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#BABED8;"> bodyHandle</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dispose</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bodyInnerHTML:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> bodyInnerHTML)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>除此之外，还可以使用 <code>page.$eval</code>:</p><div class="language-ini"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">const </span><span style="color:#F07178;">bodyInnerHTML</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> await page.$eval(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">body</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">, </span><span style="color:#F07178;">dom</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;">&amp;gt</span><span style="color:#676E95;font-style:italic;">; dom.innerHTML);</span></span>
<span class="line"><span style="color:#BABED8;">console.log(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bodyInnerHTML: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">, bodyInnerHTML)</span><span style="color:#676E95;font-style:italic;">;</span></span></code></pre></div><p><code>page.evaluate</code> 意为在浏览器环境执行脚本，可传入第二个参数作为句柄，而 <code>page.$eval</code> 则针对选中的一个 DOM 元素执行操作。</p>`,28)),a("p",null,[a("a",B,"完整示例代码",512)]),s[17]||(s[17]=a("h3",{id:"导出批量网页-下载图灵图书",tabindex:"-1"},[n("导出批量网页：下载图灵图书 "),a("a",{class:"header-anchor",href:"#导出批量网页-下载图灵图书","aria-label":'Permalink to "导出批量网页：下载图灵图书"'},"​")],-1)),a("p",null,[s[2]||(s[2]=n("我在 ")),a("a",d,"图灵社区",512),s[3]||(s[3]=n(" 上买了不少电子书，以前支持推送到 ")),s[4]||(s[4]=a("code",null,"mobi",-1)),s[5]||(s[5]=n(" 格式到 ")),s[6]||(s[6]=a("code",null,"kindle",-1)),s[7]||(s[7]=n(" 或推送 ")),s[8]||(s[8]=a("code",null,"pdf",-1)),s[9]||(s[9]=n(" 格式到邮箱进行阅读，不过经常会关闭这些推送渠道，只能留在网页上看书。"))]),s[18]||(s[18]=l(`<p>对我来说不是很方便，而这些书籍的在线阅读效果是服务器渲染出来的(带了大量标签，无法简单抽取出好的排版)，最好的方式当然是直接在线阅读并保存为 pdf 或图片了。</p><p>借助浏览器的无头模式，我写了个简单的下载已购买书籍为 <code>pdf</code> 到本地的脚本，支持批量下载已购买的书籍。</p><p>使用方法，传入帐号密码和保存路径，如：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">node</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">./demo/download-ituring-books.js</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">用户名</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">密码</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./books</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div><p>注意：<code>puppeteer</code> 的 <code>Page.pdf()</code> 目前仅支持在无头模式中使用，所以要想看有头状态的抓取过程的话，执行到 <code>Page.pdf()</code> 这步会先报错：</p><p></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2017/10/17/d883be51a6fa2d9ea6147a56a90ddc13~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.image" loading="lazy"><figcaption></figcaption></figure><p></p><p>所以启动这个脚本时，需要保持无头模式：</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> browser </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">await</span><span style="color:#BABED8;"> puppeteer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">launch</span><span style="color:#89DDFF;">({</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    </span><span style="color:#676E95;font-style:italic;">// 关闭无头模式，方便我们看到这个无头浏览器执行的过程</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    </span><span style="color:#676E95;font-style:italic;">// 注意若调用了 Page.pdf 即保存为 pdf，则需要保持为无头模式</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    </span><span style="color:#676E95;font-style:italic;">// headless: false,</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre></div><p>看下执行效果：</p><p></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2017/10/17/711bb9a2fe9c0b2d5dacb15048629da2~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.image" loading="lazy"><figcaption></figcaption></figure><p></p><p>我的书架里有20多本书，下载完后是这样子：</p><p></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2017/10/17/17b7a81a75ae93a2a69ec8ae097dcf5d~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.image" loading="lazy"><figcaption></figcaption></figure><p></p>`,18)),a("p",null,[a("a",A,"完整示例代码",512)]),s[19]||(s[19]=l('<h2 id="无头浏览器还能做什么" tabindex="-1">无头浏览器还能做什么？ <a class="header-anchor" href="#无头浏览器还能做什么" aria-label="Permalink to &quot;无头浏览器还能做什么？&quot;">​</a></h2><p>无头浏览器说白了就是能模拟人工在有头浏览器中的各种操作。那自然很多人力活，都能使用无头浏览器来做(比如上面这个下载 pdf 的过程，其实是人力打开每一个文章页面，然后按 <code>ctrl+p</code> 或 <code>command+p</code> 保存到本地的自动化过程)。</p><p>那既然用自动化工具能解决的事情，就不应该浪费重复的人力劳动了，除此之外我们还可以做：</p><ul><li>自动化工具 如自动提交表单，自动下载</li><li>自动化 UI 测试 如记录下正确 DOM 结构或截图，然后自动执行指定操作后，检查 DOM 结构或截图是否匹配(UI 断言)</li><li>定时监控工具 如定时截图发周报，或定时巡查重要业务路径下的页面是否处于可用状态，配合邮件告警</li><li>爬虫 如传统 HTTP 爬虫爬不到的地方，就可配合无头浏览器渲染能力来做</li><li>etc</li></ul><blockquote><p>感兴趣的同学可以关注专栏或者发送简历至&#39;qingsheng.lqs####alibaba-inc.com&#39;.replace(&#39;####&#39;, &#39;@&#39;)，欢迎有志之士加入~</p></blockquote>',5)),a("p",null,[s[10]||(s[10]=n("原文地址：")),a("a",E,"github.com/ProtoTeam/b…",512)])])])}const k=o(t,[["render",u]]);export{w as __pageData,k as default};
