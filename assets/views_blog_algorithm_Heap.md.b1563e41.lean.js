import{_ as e,o as t,c as l,S as i}from"./chunks/framework.7114eebe.js";const b=JSON.parse('{"title":"堆","description":"","frontmatter":{"date":"2022/11/11 15:19:58","config":{"show":false,"top":false,"dir":true,"tag":["js","algorithm"],"valine":true,"valineId":"/blog/algorithm/Heap.html"},"title":"堆"},"headers":[],"relativePath":"views/blog/algorithm/Heap.md","filePath":"views/blog/algorithm/Heap.md"}'),o={name:"views/blog/algorithm/Heap.md"};function r(s,a,p,n,d,c){return t(),l("div",null,a[0]||(a[0]=[i('<h3 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h3><p>堆：就是一棵<b>完全二叉树</b>，它如果满足以下条件，那么它就是一个堆。</p><ul><li>1.任意节点大于或小于它的所有子节点（大根堆、小根堆）</li><li>2.总是一完全树，即除了最底层，其它层的节点都被元素填满</li></ul><p>堆的操作主要有：</p><ul><li><b>大顶堆调整（Max-Heapify）</b>，将堆的末端子节点做调整，使得子节点永远小于父节点；</li><li><b>创建大顶堆（Build-Max-Heap）</b>，将堆中所有数据调整位置，使其成为大顶堆；</li><li><b>堆排序（Heap-Sort）</b>，移除在堆顶的根节点，并做大顶堆调整的迭代运算。</li></ul>',5)]))}const h=e(o,[["render",r]]);export{b as __pageData,h as default};
