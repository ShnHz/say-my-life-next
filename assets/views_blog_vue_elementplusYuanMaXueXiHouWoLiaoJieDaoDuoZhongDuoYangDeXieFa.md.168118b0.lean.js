import{_ as a,o as n,c as l,S as p}from"./chunks/framework.7114eebe.js";const B=JSON.parse('{"title":"element-plus源码学习后，我了解到多种多样的写法","description":"","frontmatter":{"title":"element-plus源码学习后，我了解到多种多样的写法","date":"2023/07/17 10:21:17","summary":null,"config":{"show":true,"top":false,"dir":true,"dirTag":["h3","h4","h5"],"tag":["info","vue","js"],"valine":true,"valineId":null},"password":false,"outline":[3,5]},"headers":[],"relativePath":"views/blog/vue/elementplusYuanMaXueXiHouWoLiaoJieDaoDuoZhongDuoYangDeXieFa.md","filePath":"views/blog/vue/elementplusYuanMaXueXiHouWoLiaoJieDaoDuoZhongDuoYangDeXieFa.md"}'),o={name:"views/blog/vue/elementplusYuanMaXueXiHouWoLiaoJieDaoDuoZhongDuoYangDeXieFa.md"};function e(t,s,c,r,D,y){return n(),l("div",null,s[0]||(s[0]=[p(`<h6 id="原文-掘金" tabindex="-1">原文 <a href="https://juejin.cn/post/7255955134131503164" target="_blank" rel="noreferrer">掘金</a> <a class="header-anchor" href="#原文-掘金" aria-label="Permalink to &quot;原文 [掘金](https://juejin.cn/post/7255955134131503164)&quot;">​</a></h6><div class="markdown-body cache"><p>文章封面来自于深圳湾桥，很漂亮！</p><p>本文是阅读源码之后，学习到一些新写法，平常业务开发也可以用起来。在我看来，阅读源码，不但能知道该框架的底层原理，出现bug时，可以快速排查和修复，更重要的是，阅读源码就像向优秀的人学习，掌握我们不曾了解的新知识点，看看别人是如何编写出漂亮的，可复用的代码。</p><h2 id="操作符" tabindex="-1">操作符!. <a class="header-anchor" href="#操作符" aria-label="Permalink to &quot;操作符!.&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">onMounted</span><span style="color:#BABED8;">(() </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 组合在一起,!. 就是“强制执行方法,然后再访问它的返回值”。</span></span>
<span class="line"><span style="color:#BABED8;">  const items </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> breadcrumb</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;">!.</span><span style="color:#82AAFF;">querySelectorAll</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">ns</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">e</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">item</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">}\`</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">items.length</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">items</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">items</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAttribute</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">aria-current</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">page</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre></div><h2 id="取值和监听值变化-不使用watch" tabindex="-1">取值和监听值变化，不使用watch <a class="header-anchor" href="#取值和监听值变化-不使用watch" aria-label="Permalink to &quot;取值和监听值变化，不使用watch&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> checkedValue </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> computed</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">CascaderValue</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">get</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">cloneDeep</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">props</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">modelValue</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">CascaderValue</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">set</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">val</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">emit</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">UPDATE_MODEL_EVENT</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">emit</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">CHANGE_EVENT</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">props</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">validateEvent</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">formItem</span><span style="color:#89DDFF;">?.</span><span style="color:#82AAFF;">validate</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">change</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#F07178;">((</span><span style="color:#BABED8;">err</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">; </span><span style="color:#82AAFF;">debugWarn</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">err</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre></div><h2 id="透传使用symbol" tabindex="-1">透传使用symbol <a class="header-anchor" href="#透传使用symbol" aria-label="Permalink to &quot;透传使用symbol&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">provide</span><span style="color:#BABED8;">(</span></span>
<span class="line"><span style="color:#BABED8;">      CASCADER_PANEL_INJECTION_KEY</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 透传下去，使用Symbol作为唯一值</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#82AAFF;">reactive</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        config</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">        expandingNode</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">        checkedNodes</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">        isHoverMenu</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">        initialLoaded</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">        renderLabelFn</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">        lazyLoad</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">        expandNode</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">        handleCheckChange</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">    )</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> CASCADER_PANEL_INJECTION_KEY</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">InjectionKey</span><span style="color:#89DDFF;">&amp;</span><span style="color:#FFCB6B;">lt</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">ElCascaderPanelContext</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">Symbol</span><span style="color:#BABED8;">()</span></span></code></pre></div><p>强制执行，会影响最终值</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/41f650c11c524dca8e5b80882130e32a~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" alt="" loading="lazy"></p><h2 id="获取组件实例-调用组件自定义事件" tabindex="-1">获取组件实例，调用组件自定义事件 <a class="header-anchor" href="#获取组件实例-调用组件自定义事件" aria-label="Permalink to &quot;获取组件实例，调用组件自定义事件&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> emit </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">getCurrentInstance</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">!</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> model </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">computed</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">get</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">isGroup</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">checkboxGroup</span><span style="color:#89DDFF;">?.</span><span style="color:#BABED8;">modelValue</span><span style="color:#89DDFF;">?.</span><span style="color:#BABED8;">value</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">props</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">modelValue</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">??</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">selfModel</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">set</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">val</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">unknown</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">isGroup</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">amp</span><span style="color:#F07178;">;</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">amp</span><span style="color:#F07178;">; </span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">isLimitExceeded</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#BABED8;">checkboxGroup</span><span style="color:#89DDFF;">?.</span><span style="color:#BABED8;">max</span><span style="color:#89DDFF;">?.</span><span style="color:#BABED8;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">amp</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#BABED8;">amp</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#BABED8;">val</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">checkboxGroup</span><span style="color:#89DDFF;">?.</span><span style="color:#BABED8;">max</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">isLimitExceeded</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">amp</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#BABED8;">amp</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">checkboxGroup</span><span style="color:#89DDFF;">?.</span><span style="color:#82AAFF;">changeEvent</span><span style="color:#89DDFF;">?.</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">emit</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">UPDATE_MODEL_EVENT</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">selfModel</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">val</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre></div><ol><li><p>getCurrentInstance() 函数可以在 setup() 中获取到当前组件实例。</p></li><li><p>但是直接调用 getCurrentInstance() 会返回一个可选型(maybe)的实例,可能为 null。</p></li><li><p>为了确保获取到实例,使用 ! 非空断言运算符,强制转换为非空实例。</p></li><li><p>所以 getCurrentInstance()! 确保了返回的实例不会是 null。</p></li><li><p>然后使用 ES6 解构赋值语法,从实例中取出 emit 方法。</p></li><li><p>emit 方法用于在组件内部触发自定义事件。</p></li><li><p>这种方式避免了代码中出现隐式的 this,使代码更清晰可读。</p></li><li><p>是 Vue 3 Composition API 中常用的一种实例访问模式,用于在 setup() 中获取实例属性和方法。</p></li></ol><h2 id="unref与ref" tabindex="-1">unref与ref <a class="header-anchor" href="#unref与ref" aria-label="Permalink to &quot;unref与ref&quot;">​</a></h2><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c79dc60324d044dfb39ad6482486bbaa~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" alt="" loading="lazy"></p><p>unref 和 ref 都可以用来获取响应式对象的值,但是有以下几点关键区别:</p><ol><li><p>unref 是一个函数,ref 是创建ref对象的方法。unref直接返回值,ref会创建一个响应式的引用对象。</p></li><li><p>unref 获取值,ref 创建值的引用。unref目的是获取值,ref是创建一个值的响应式引用。</p></li><li><p>unref 参数可以是基础值或响应式对象,ref只接受基础值创建引用。unref的参数可以是基础类型的值,也可以是ref或reactive对象,它会返回对象的值或对象本身。ref只接受基础类型的值来创建一个响应式的引用对象。</p></li><li><p>unref 使用场景是在组件逻辑中获取值,ref创建应用于模板的响应式引用。unref常用于组件逻辑中,需要获取响应式对象的原始值时使用。ref更多地在模板中使用,创建一个可以响应式跟踪的引用。</p></li></ol><p>unref直接返回的值，不需要用.value访问</p><h2 id="raf-caf" tabindex="-1">rAF &amp; cAF <a class="header-anchor" href="#raf-caf" aria-label="Permalink to &quot;rAF &amp;amp; cAF&quot;">​</a></h2><p>requestAnimationFrame 和 cancelAnimationFrame 是浏览器用来实现高性能动画的 API。它可以把每一帧的代码编排到浏览器的一次重绘中,避免频繁的重绘导致性能问题。</p><p>这两个函数在频繁重绘调用，可以减轻浏览器负担</p><p>比如：定时器</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> isClient </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#BABED8;"> window </span><span style="color:#89DDFF;">!==</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> rAF </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">fn</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt; </span><span style="color:#BABED8;font-style:italic;">void</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> =&amp;gt;</span></span>
<span class="line"><span style="color:#BABED8;">  isClient</span></span>
<span class="line"><span style="color:#BABED8;">    ? window.requestAnimationFrame</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">fn</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    : </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">setTimeout</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">fn</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> 16</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> as unknown as number)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> cAF </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">handle</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> =&amp;gt;</span></span>
<span class="line"><span style="color:#BABED8;">  isClient ? window.cancelAnimationFrame</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">handle</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">clearTimeout</span><span style="color:#BABED8;">(</span><span style="color:#FFCB6B;">handle</span><span style="color:#BABED8;">)</span></span></code></pre></div><h2 id="event-target-as-htmlelement-closest" tabindex="-1">(event.target as HTMLElement).closest <a class="header-anchor" href="#event-target-as-htmlelement-closest" aria-label="Permalink to &quot;(event.target as HTMLElement).closest&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> handleMouseDown </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">event</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">MouseEvent</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> =&amp;gt; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  const target </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> (event</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">target </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">HTMLElement</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">closest</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">td</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">!</span><span style="color:#BABED8;font-style:italic;">target</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> return</span></span>
<span class="line"><span style="color:#BABED8;">  focusWithClick = true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> handleMouseUp </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">event</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">MouseEvent</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> =&amp;gt; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  const target </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> (event</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">target </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">HTMLElement</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">closest</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">td</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">!</span><span style="color:#BABED8;font-style:italic;">target</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> return</span></span>
<span class="line"><span style="color:#BABED8;">  focusWithClick = false</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>closest() 方法会沿着 DOM 树向上寻找匹配的选择器的第一个祖先元素,在这里是查找最近的 元素。所以整个代码的作用就是: 获取点击事件的目标元素</p><ul><li>将其转化为 HTMLElement 类型</li><li>在其祖先元素中查找最近的 td 元素</li><li>并返回这个 td 元素这样可以方便地通过点击事件获取到对应的 td 元素进行后续操作。</li></ul></div>`,2)]))}const i=a(o,[["render",e]]);export{B as __pageData,i as default};
