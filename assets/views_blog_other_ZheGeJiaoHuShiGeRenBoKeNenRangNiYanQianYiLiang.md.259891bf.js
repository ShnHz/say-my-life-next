import{_ as o,o as p,c as e,S as l,C as a,a as n}from"./chunks/framework.7114eebe.js";const h=JSON.parse('{"title":"这个交互式个人博客能让你眼前一亮✨👀 ？","description":"","frontmatter":{"title":"这个交互式个人博客能让你眼前一亮✨👀 ？","date":"2023/09/08 16:50:48","summary":"还挺有趣的一个博客形式","config":{"show":true,"top":false,"dir":true,"dirTag":["h3","h4","h5"],"tag":["info"],"valine":true,"valineId":null},"password":false,"outline":[3,5]},"headers":[],"relativePath":"views/blog/other/ZheGeJiaoHuShiGeRenBoKeNenRangNiYanQianYiLiang.md","filePath":"views/blog/other/ZheGeJiaoHuShiGeRenBoKeNenRangNiYanQianYiLiang.md"}'),t={name:"views/blog/other/ZheGeJiaoHuShiGeRenBoKeNenRangNiYanQianYiLiang.md"},c={href:"https://link.juejin.cn?target=https%3A%2F%2Fyucihent.space%2F",target:"_blank",title:"https://yucihent.space/",ref:"nofollow noopener noreferrer"},r={href:"https://link.juejin.cn?target=https%3A%2F%2Fyucihent.space%2Fabout",target:"_blank",title:"https://yucihent.space/about",ref:"nofollow noopener noreferrer"},y={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fvercel%2Fnext.js%2Fdiscussions%2F22388",target:"_blank",title:"https://github.com/vercel/next.js/discussions/22388",ref:"nofollow noopener noreferrer"},D={href:"https://link.juejin.cn?target=https%3A%2F%2Fnextjs.org%2Fdocs%2Fmessages%2Freact-hydration-error%23solution-2-disabling-ssr-on-specific-components",target:"_blank",title:"https://nextjs.org/docs/messages/react-hydration-error#solution-2-disabling-ssr-on-specific-components",ref:"nofollow noopener noreferrer"};function F(i,s,B,d,A,E){return p(),e("div",null,[s[4]||(s[4]=l('<h6 id="原文-掘金" tabindex="-1">原文 <a href="https://juejin.cn/post/7267408057163055139" target="_blank" rel="noreferrer">掘金</a> <a class="header-anchor" href="#原文-掘金" aria-label="Permalink to &quot;原文 [掘金](https://juejin.cn/post/7267408057163055139)&quot;">​</a></h6><p align="center"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7082bf114e23416e9a14f2ef21796bf0~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?" alt="2023-08-15 13.21.03.gif" loading="lazy"></p><p>从构思到上线的全过程，开发中遇到一些未知问题，也都通过查阅资料和源码一一解决，小记一下望对正在使用或即将使用<code>Nextjs</code>开发的你们有所帮助。</p><h3 id="那些年我开发过的博客" tabindex="-1">那些年我开发过的博客 <a class="header-anchor" href="#那些年我开发过的博客" aria-label="Permalink to &quot;那些年我开发过的博客&quot;">​</a></h3><p>就挺有意思，域名，技术栈和平台的折腾史</p><ul><li>2018年使用<code>hexo</code>搭建了个静态博客，部署在<code>github pages</code></li><li>2020年重新写了博客，<code>vue</code>，<code>nodejs</code>，<code>mongodb</code>三件套，使用<code>nginx</code>部署在云服务器上</li><li>2023年云服务器过期了，再一次重写了博客，<code>nextjs</code>为基础框架，部署在<code>vercel</code>上</li></ul><h3 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h3>',7)),a("p",null,[s[0]||(s[0]=n("因为日常开发离不开终端，正好也有重写博客的想法，打算开发一个不只是看的博客网站，所以模仿终端风格开发了")),a("a",c,"Yucihent",512),s[1]||(s[1]=n("。"))]),s[5]||(s[5]=a("h3",{id:"技术栈",tabindex:"-1"},[n("技术栈 "),a("a",{class:"header-anchor",href:"#技术栈","aria-label":'Permalink to "技术栈"'},"​")],-1)),a("p",null,[s[2]||(s[2]=a("code",null,"nextjs",-1)),s[3]||(s[3]=n()),a("a",r,"更多技术栈",512)]),s[6]||(s[6]=l(`<p>选用<code>nextjs</code>是因为<code>next13</code>更新且稳定了<code>App Router</code>和一些其他新特性。</p><h3 id="设计" tabindex="-1">设计 <a class="header-anchor" href="#设计" aria-label="Permalink to &quot;设计&quot;">​</a></h3><p>简约为主，首页为类终端风格，<code>prompt</code>样式参考了<code>starship</code>，也参考过<code>ohmyzsh themes</code>，选用<code>starship</code>因为觉得更好看。</p><h3 id="交互" tabindex="-1">交互 <a class="header-anchor" href="#交互" aria-label="Permalink to &quot;交互&quot;">​</a></h3><p>通过手动输入或点击列出的命令进行交互，目前可交互的命令有：</p><ul><li><code>help</code> 查看更多</li><li><code>list</code>和<code>ls</code> 列出可用命令</li><li><code>clear</code> 清空所有输出</li><li><code>posts</code> 列出所有文章</li><li><code>about</code> 关于我</li></ul><p>后续会新增一些命令，增加交互的趣味。</p><h3 id="暗黑模式" tabindex="-1">暗黑模式 <a class="header-anchor" href="#暗黑模式" aria-label="Permalink to &quot;暗黑模式&quot;">​</a></h3><blockquote><p>基于<code>tailwind</code>的<code>dark mode</code>和<code>next-themes</code></p></blockquote><p>首先将<code>tailwind</code>的<code>dark mode</code>设置为<code>class</code>，目的是将暗黑模式的切换设置为手动，而不是跟随系统。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// tailwind.config.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">darkMode</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">class</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>新建<code>ThemeProvider</code>组件，用到<code>next-themes</code>提供的<code>ThemeProvider</code>，需要在文件顶部使用<code>use client</code>，因为<code>createContext</code>只在客户端组件使用。</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">use client</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">ThemeProvider</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">NextThemeProvider</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">next-themes</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">type</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">ThemeProviderProps</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">next-themes/dist/types</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">ThemeProvider</span><span style="color:#89DDFF;">({</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">children</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">...</span><span style="color:#BABED8;font-style:italic;">props</span></span>
<span class="line"><span style="color:#89DDFF;">}:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ThemeProviderProps</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">NextThemeProvider</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{...</span><span style="color:#BABED8;">props</span><span style="color:#89DDFF;">}&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#89DDFF;">;{</span><span style="color:#BABED8;">children</span><span style="color:#89DDFF;">}&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#89DDFF;">;/</span><span style="color:#BABED8;">NextThemeProvider</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在<code>app/layout.tsx</code>中使用<code>ThemeProvider</code>，设置<code>attribute</code>为<code>class</code>，这是必要的。</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">ThemeProvider attribute</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">class</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#89DDFF;">;{</span><span style="color:#BABED8;">children</span><span style="color:#89DDFF;">}&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#89DDFF;">;/</span><span style="color:#BABED8;">ThemeProvider</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p><code>next-themes</code>提供了<code>useTheme</code>，解构出<code>theme</code>和<code>setTheme</code>用于手动设置主题。</p><p>综上基本实现暗黑模式切换，但你会在控制台看到此报错信息：<code>Warning: Extra attributes from the server: class,style</code>，虽然它并不影响功能，但终究是个报错。 作为第三方包，可能存在水合不匹配的问题，经查阅资料，禁用<code>ThemeProvider</code>组件预渲染消除报错。</p><p>资料：</p>`,18)),a("ul",null,[a("li",null,[a("a",y,"Warning: Extra attributes from the server: style",512)]),a("li",null,[a("a",D,"Disabling SSR on specific components",512)])]),s[7]||(s[7]=l(`<div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> NoSSRThemeProvider </span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">dynamic</span><span style="color:#BABED8;">(() </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt; </span><span style="color:#89DDFF;">import</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@/components/ThemeProvider</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">ssr</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">NoSSRThemeProvider attribute</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">class</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#89DDFF;">;{</span><span style="color:#BABED8;">children</span><span style="color:#89DDFF;">}&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#89DDFF;">;/</span><span style="color:#BABED8;">NoSSRThemeProvider</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="类终端" tabindex="-1">类终端 <a class="header-anchor" href="#类终端" aria-label="Permalink to &quot;类终端&quot;">​</a></h3><blockquote><p>由输入和输出组件组成，输入的结果添加到输出list中</p></blockquote><h4 id="命令输入的打字效果" tabindex="-1">命令输入的打字效果 <a class="header-anchor" href="#命令输入的打字效果" aria-label="Permalink to &quot;命令输入的打字效果&quot;">​</a></h4><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d14622a8447a46b9894ff128819ceaed~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" alt="Alt Text" width="500" loading="lazy"><p>定义打字间隔100ms，对键入的命令for处理，定时器中根据遍历的索引延迟赋值。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> autoTyping </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">cmd</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> =&amp;gt; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  const interval </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">100</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// ms</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">for</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">let</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">i</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">; </span><span style="color:#BABED8;font-style:italic;">i</span><span style="color:#BABED8;"> &amp;</span><span style="color:#BABED8;font-style:italic;">lt</span><span style="color:#BABED8;">; cmd.length; </span><span style="color:#BABED8;font-style:italic;">i</span><span style="color:#BABED8;">++</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">      () </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        setCmd</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">(</span><span style="color:#BABED8;font-style:italic;">prev</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> =&amp;gt; prev + cmd.charAt(i))</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">interval</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    )</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="滚动到底部" tabindex="-1">滚动到底部 <a class="header-anchor" href="#滚动到底部" aria-label="Permalink to &quot;滚动到底部&quot;">​</a></h4><p>定义外层容器<code>ref</code>为<code>containerRef</code>，键入命令后都自动滚动到页面底部，使用了<code>scrollIntoView</code>api，作用是让调用这个api的容器始终在页面可见，<code>block</code>参数设置为<code>end</code>表示垂直方向末端对其即最底端。</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> containerRef </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> useRef</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">HTMLDivElement</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">null</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#82AAFF;">useEffect</span><span style="color:#BABED8;">(() </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  containerRef.current?.scrollIntoView(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">behavior</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">smooth</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">block</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">end</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#BABED8;"> [typedCmds])</span></span></code></pre></div><h3 id="mdx" tabindex="-1">MDX <a class="header-anchor" href="#mdx" aria-label="Permalink to &quot;MDX&quot;">​</a></h3><blockquote><p>何为<code>mdx</code>？即给<code>md</code>添加了<code>jsx</code>支持，功能更强大的md，在nextjs中通过<code>@next/mdx</code>解析<code>.mdx</code>文件，它会将<code>md</code>和<code>react components</code>转成<code>html</code></p></blockquote><p>安装相关包，后两者作为<code>@next/mdx</code>的<code>peerDependencies</code></p><ul><li><code>@next/mdx</code></li><li><code>@mdx-js/loader</code></li><li><code>@mdx-js/react</code></li></ul><p>在<code>next.config.js</code>新增<code>createMDX</code>配置</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// next.config.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> createMDX </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@next/mdx</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> nextConfig </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> withMDX </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">createMDX</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">withMDX</span><span style="color:#BABED8;">(nextConfig)</span></span></code></pre></div><p>接着在应用根目录下新建<code>mdx-components.tsx</code></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// mdx-components.tsx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">type</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">MDXComponents</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mdx/types</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">useMDXComponents</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">components</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">MDXComponents</span><span style="color:#89DDFF;">):</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">MDXComponents</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">...</span><span style="color:#BABED8;">components</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在<code>app</code>目录下使用<code>.mdx</code>文件，<code>useMDXComponents</code>组件是必要的，</p><p>需要注意的是此文件命名上有一定规范只能命名为<code>mdx-components</code>，不能为其他名称，也不可为<code>MdxComponents</code>，从<code>@next/mdx</code>源码中可以看出会去应用根目录查找<code>mdx-components</code>。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// @next/mdx部分源码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">config</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">resolve</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">alias[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">next-mdx-import-source-file</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">private-next-root-dir/src/mdx-components</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">private-next-root-dir/mdx-components</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@mdx-js/react</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#BABED8;">]</span></span></code></pre></div><p>至此就可以在app中使用<code>mdx</code>。</p><h3 id="排版" tabindex="-1">排版 <a class="header-anchor" href="#排版" aria-label="Permalink to &quot;排版&quot;">​</a></h3><blockquote><p>为mdx解析成的html添加样式</p></blockquote><p>解析mdx为html，但并没有样式，所以我们借助<code>@tailwindcss/typography</code>来为其添加样式，在<code>tailwind.config.js</code>使用该插件。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// tailwind.config.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@tailwindcss/typography</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在外层标签上添加<code>prose</code>的className，<code>prose-invert</code>用于暗黑模式。</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">article className</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prose dark:prose-invert</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#89DDFF;">;{</span><span style="color:#BABED8;">mdx</span><span style="color:#89DDFF;">}&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#89DDFF;">;/</span><span style="color:#BABED8;">article</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>综上我们实现了对mdx的样式支持，然而有一点是<code>@tailwindcss/typography</code>并不会对mdx代码块中代码进行高亮。</p><h3 id="代码高亮" tabindex="-1">代码高亮 <a class="header-anchor" href="#代码高亮" aria-label="Permalink to &quot;代码高亮&quot;">​</a></h3><blockquote><p>写文章或多或少都有代码，高亮是必不可少，那么<code>react-syntax-highlighter</code>该上场了</p></blockquote><p>定义一个<code>CodeHighligher</code>组件</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// CodeHighligher.tsx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Prism</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">SyntaxHighlighter</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">react-syntax-highlighter</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">oneDark</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">oneLight</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">react-syntax-highlighter/dist/cjs/styles/prism</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">useTheme</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">next-themes</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">CodeHighligher</span><span style="color:#89DDFF;">({</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">lang</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">code</span></span>
<span class="line"><span style="color:#89DDFF;">}:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">lang</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">code</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"><span style="color:#89DDFF;">})</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">theme</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">useTheme</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#F07178;">;</span><span style="color:#BABED8;font-style:italic;">SyntaxHighlighter</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">language</span><span style="color:#89DDFF;">={</span><span style="color:#F07178;">lang?.replace(/\\language-/</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">) || </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">javascript</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">style</span><span style="color:#89DDFF;">={</span><span style="color:#BABED8;">theme</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">light</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">oneLight</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">oneDark</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">customStyle</span><span style="color:#89DDFF;">={{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">padding</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">fontSize</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">fontFamily</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">var(--font-family)</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;font-style:italic;">code</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#F07178;">;</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">SyntaxHighlighter</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">  )</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><code>react-syntax-highlighter</code>高亮代码可用<code>hljs</code>和<code>prism</code>，我在这使用的<code>prism</code>，两者都有众多代码高亮主题可供选择，lang如果没标注则默认设置为<code>javascript</code>也可以简写为<code>js</code>，值得注意的是如果是使用<code>hljs</code>，则必须写<code>javascript</code>，不可简写为<code>js</code>，否则代码高亮失败，这一点<code>prism</code>更加友好。</p><p>同时可通过<code>useTheme</code>实现亮色，暗色模式下使用不同代码高亮主题。</p><p>组件写好了，该如何使用？上面讲到过mdx的解析，在<code>useMDXComponents</code>重新渲染<code>pre</code>标签。</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// mdx-components.tsx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">type</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">MDXComponents</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mdx/types</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> CodeHighligher </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@/components/CodeHighligher</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">useMDXComponents</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">components</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">MDXComponents</span><span style="color:#89DDFF;">):</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">MDXComponents</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    pre</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">children</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      const </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">className</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">children</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">code</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> = </span><span style="color:#BABED8;">props</span></span>
<span class="line"><span style="color:#F07178;">      return &amp;lt;CodeHighligher </span><span style="color:#BABED8;">lang</span><span style="color:#89DDFF;">={</span><span style="color:#BABED8;">className</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">code</span><span style="color:#89DDFF;">={</span><span style="color:#BABED8;">code</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>mdx文件中代码块会被解析成<code>pre</code>标签，可以对<code>pre</code>标签返回值作进一步处理，即返回高亮组件，这样可实现对代码高亮，当然高亮主题很多，选自己喜欢的。</p><h3 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">​</a></h3><h4 id="元数据" tabindex="-1">元数据 <a class="header-anchor" href="#元数据" aria-label="Permalink to &quot;元数据&quot;">​</a></h4><blockquote><p>文章一些信息如标题，描述，日期，作者等都作为文章的元数据，使用<code>yaml</code>语法定义</p></blockquote><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">---</span></span>
<span class="line"><span style="color:#F07178;">title</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">文章标题</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">description</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">文章描述</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">date</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2020-01-01</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">---</span></span></code></pre></div><p>@next/mdx默认不会按照<code>yaml</code>语法解析，这会被解析成<code>h2</code>标签，然而我们并不希望元数据被解析成h2标签作为内容展示，更希望拿这类数据做其他处理， 为了正确解析<code>yaml</code>，需要借助<code>remark-frontmatter</code>来实现。</p><p>使用该插件，注意需要修改next配置文件名为<code>next.config.mjs</code>，因为<code>remark-frontmatter</code>只支持<code>ESM</code>规范。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// next.config.mjs</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> createMDX </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@next/mdx</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> frontmatter </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">remark-frontmatter</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> nextConfig </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> withMDX </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">createMDX</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">options</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">remarkPlugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [frontmatter]</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">withMDX</span><span style="color:#BABED8;">(nextConfig)</span></span></code></pre></div><p>yaml被正确解析了那么我们可以使用<code>gray-matter</code>来获取文章元数据</p><h4 id="列表" tabindex="-1">列表 <a class="header-anchor" href="#列表" aria-label="Permalink to &quot;列表&quot;">​</a></h4><p>由于app目录是运行在<code>nodejs runtime</code>下，基本思路是用nodejs的<code>fs</code>模块去读取文章目录即<code>mdxs/posts</code>，读取该目录下的所有文章放在一个list中。</p><p>使用<code>fs.readdirSync</code>读取文章目录内容，但是这仅仅是拿到文章名称的集合。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> POST_PATH </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#BABED8;">(process</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">cwd</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mdxs/posts</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 文章名称集合</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">getPostList</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readdirSync</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">POST_PATH</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">((</span><span style="color:#BABED8;">name</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">; </span><span style="color:#BABED8;">name</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">\\.</span><span style="color:#C3E88D;">mdx</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>文章列表中展示的是标题而不是名称，标题作为文章的元数据，通过<code>gray-matter</code>的<code>read</code>api读取文件可获取（也可以使用<code>fs.readFileSync</code>） read返回<code>data</code>和<code>content</code>的对象， <code>data</code>是元数据信息，<code>content</code>则是文章内容。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">getPostMetaList</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">posts</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">getPostList</span><span style="color:#F07178;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">posts</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">((</span><span style="color:#BABED8;">post</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    const </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">data</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">title</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">description</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">date</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> = matter.read(path.join(</span><span style="color:#BABED8;">POST_PATH</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`\${</span><span style="color:#BABED8;">post</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">.mdx</span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 使用fs.readFileSync</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// const post = fs.readFileSync(path.join(POST_PATH, \`\${post}.mdx\`), &#39;utf-8&#39;)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// const {</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//   data: { title, description, date }</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// } = matter(post)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    return {</span></span>
<span class="line"><span style="color:#F07178;">      slug</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">post</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">title</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">description</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">date</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  })</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>上述方法中我们拿到了所有文章标题，描述信息，日期的list，根据list渲染文章列表。</p><h4 id="详情" tabindex="-1">详情 <a class="header-anchor" href="#详情" aria-label="Permalink to &quot;详情&quot;">​</a></h4><p>文章列表中使用<code>Link</code>跳转到详情，通过<code>dynamic</code>动态加载文章对应的<code>mdx</code>文件</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">LoadMDX</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">props</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Omit</span><span style="color:#89DDFF;">&amp;</span><span style="color:#FFCB6B;">lt</span><span style="color:#BABED8;">;</span><span style="color:#FFCB6B;">PostMetaType</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">description</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">&amp;</span><span style="color:#BABED8;font-style:italic;">gt</span><span style="color:#BABED8;">;</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">slug</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">title</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">date</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">props</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">DynamicMDX</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">dynamic</span><span style="color:#F07178;">(() </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">; </span><span style="color:#89DDFF;">import</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">@/mdxs/posts/</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">slug</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">.mdx</span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    loading</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> () </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">; </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#F07178;">;</span><span style="color:#BABED8;">p</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">;</span><span style="color:#BABED8;">loading</span><span style="color:#89DDFF;">...&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#F07178;">;</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">p</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#F07178;">;</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#F07178;">;</span><span style="color:#BABED8;">div</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">className</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mb-12</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#F07178;">;</span><span style="color:#BABED8;">h1</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">className</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mb-5 font-[600]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">;</span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;">title</span><span style="color:#89DDFF;">}&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#F07178;">;</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">h1</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#F07178;">;</span><span style="color:#BABED8;">time</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">className</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my-0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">;</span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;">date</span><span style="color:#89DDFF;">}&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#F07178;">;</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">time</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#F07178;">;</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">div</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#F07178;">;</span><span style="color:#BABED8;">DynamicMDX</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#F07178;">;</span><span style="color:#89DDFF;">/&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">  )</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="generatestaticparams" tabindex="-1">generateStaticParams <a class="header-anchor" href="#generatestaticparams" aria-label="Permalink to &quot;generateStaticParams&quot;">​</a></h3><blockquote><p>优化文章列表跳转详情的速度</p></blockquote><p>在文章详情组件导出<code>generateStaticParams</code>方法，这个方法在构建时静态生成路由，而不是在请求时按需生成路由，一定程度上提高了访问详情页速度</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">generateStaticParams</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">posts</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://.../posts</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">((</span><span style="color:#BABED8;">res</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">; </span><span style="color:#BABED8;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#F07178;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">posts</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">((</span><span style="color:#BABED8;">post</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#F07178;">; (</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    slug</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">post</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">slug</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;部署&quot;">​</a></h3><p>项目是部署在vercel，使用github登录后我们新建一个项目，点进去后会看到<code>Import Git Repository</code>，导入对应仓库即可，也可使用vercel提供的模版新建一个，后续我们每次提交代码都会自动化部署。</p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/85eefd4e825b4dee81460d5c263387c4~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" alt="Alt Text" width="900" loading="lazy"><p>有自己域名的可以在Domains中添加，然后去到你买域名的地方添加对应DNS解析即可。</p><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>开发中遇到了一些坑：</p><ol><li><code>next-themes</code>报错<code>Warning: Extra attributes from the server: class,style</code>，通过issues和看文档，最终找到了方案</li><li><code>mdx-components</code>组件的命名，经多次测试发现只能命名为<code>mdx-components</code>，阅读@next/mdx的源码也验证了</li><li>语法高亮，开始使用的<code>hljs</code>，mdx中的代码块写的<code>js</code>，部署到线上后发现代码并没有高亮，然后改用了<code>prism</code>正常高亮， 又是阅读了<code>react-syntax-highlighter</code>源码发现hljs的语言集合中并没有<code>js</code>，所以无法正确解析，只能写成<code>javascript</code>，而<code>prism</code>两者写法都支持</li><li>首页的<code>posts</code>命令是运行在客户端组件中，fs无法使用，因此获取文章的方案使用fetch请求api</li><li>使用<code>remark-frontmatter</code>解析yaml无法和<code>mdxRs: true</code>同时使用，否则解析失败。添加此配置项表示使用基于<code>rust</code>的解析器来解析<code>mdx</code>，可能是还未支持的缘故</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">withMDX</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">experimental</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">mdxRs</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre></div><p>后续更新：</p><ol><li>会新增<code>Weekly</code>周刊模块，关注前端技术的更新</li><li>文章详情页添加上一篇和下一篇，更方便的阅读文章</li></ol><h3 id="试一试-👉yucihent" tabindex="-1">试一试 👉Yucihent <a class="header-anchor" href="#试一试-👉yucihent" aria-label="Permalink to &quot;试一试 👉Yucihent&quot;">​</a></h3><h3 id="博客源码-👉github" tabindex="-1">博客源码 👉github <a class="header-anchor" href="#博客源码-👉github" aria-label="Permalink to &quot;博客源码 👉github&quot;">​</a></h3>`,72))])}const u=o(t,[["render",F]]);export{h as __pageData,u as default};
