import{_ as l,o as e,c as p,C as a,a as n,S as o}from"./chunks/framework.7114eebe.js";const B=JSON.parse('{"title":"中高级前端必须掌握的package.json最新最全指南","description":"","frontmatter":{"title":"中高级前端必须掌握的package.json最新最全指南","date":"2023/07/07 14:48:50","summary":null,"config":{"show":true,"top":false,"dir":true,"dirTag":["h3","h4","h5"],"tag":["info","js","nodejs","tool"],"valine":true,"valineId":null},"password":false,"outline":[3,5]},"headers":[],"relativePath":"views/blog/other/ZhongGaoJiQianDuanBiXuZhangWoDepackagejsonZuiXinZuiQuanZhiNan.md","filePath":"views/blog/other/ZhongGaoJiQianDuanBiXuZhangWoDepackagejsonZuiXinZuiQuanZhiNan.md"}'),t={name:"views/blog/other/ZhongGaoJiQianDuanBiXuZhangWoDepackagejsonZuiXinZuiQuanZhiNan.md"},r={class:"markdown-body cache"},c={href:"https://link.juejin.cn?target=https%3A%2F%2Fexample.com",target:"_blank",title:"https://example.com",ref:"nofollow noopener noreferrer"},i={href:"https://link.juejin.cn?target=https%3A%2F%2Fopensource.org%2Flicenses%2F",target:"_blank",title:"https://opensource.org/licenses/",ref:"nofollow noopener noreferrer"};function D(y,s,F,u,d,h){return e(),p("div",null,[s[5]||(s[5]=a("h6",{id:"原文-掘金",tabindex:"-1"},[n("原文 "),a("a",{href:"https://juejin.cn/post/7240805459288522808",target:"_blank",rel:"noreferrer"},"掘金"),n(),a("a",{class:"header-anchor",href:"#原文-掘金","aria-label":'Permalink to "原文 [掘金](https://juejin.cn/post/7240805459288522808)"'},"​")],-1)),a("div",r,[s[2]||(s[2]=o(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h1><p>package.json 是一个用于描述和配置项目的重要文件，其中包含了许多字段和选项，可以影响项目的构建、依赖管理、脚本执行等方面。了解这些字段可以帮助开发者更好地理解和控制项目的行为。</p><p>package.json对于大部分前端开发者来说，知道dependencies与devDependencies就够了。但对于库开发者或有更高级需求的开发者来说，了解 package.json 的其他字段是非常有必要的。</p><p>本文介绍的字段分为官方字段与非官方字段。非官方字段是被主流打包工具（webpack，Rollup）所支持， 旨在提供更高级的配置和功能，以满足特定的构建需求，可能不具备通用性。</p><p>目前版本：v7.24.2</p><h1 id="一、必须属性" tabindex="-1">一、必须属性 <a class="header-anchor" href="#一、必须属性" aria-label="Permalink to &quot;一、必须属性&quot;">​</a></h1><h2 id="_1-name" tabindex="-1">1. name <a class="header-anchor" href="#_1-name" aria-label="Permalink to &quot;1.  name&quot;">​</a></h2><p>定义项目的名称，不能以&quot;.&quot;和&quot;_&quot;开头，不能包含大写字母</p><h2 id="_2-version" tabindex="-1">2. version <a class="header-anchor" href="#_2-version" aria-label="Permalink to &quot;2. version&quot;">​</a></h2><p>定义项目的版本号，格式为：大版本号.次版本号.修订号</p><h1 id="二、描述信息" tabindex="-1">二、描述信息 <a class="header-anchor" href="#二、描述信息" aria-label="Permalink to &quot;二、描述信息&quot;">​</a></h1><h2 id="_1-description" tabindex="-1">1. description <a class="header-anchor" href="#_1-description" aria-label="Permalink to &quot;1.  description&quot;">​</a></h2><p>项目描述</p><h2 id="_2-keywords" tabindex="-1">2. keywords <a class="header-anchor" href="#_2-keywords" aria-label="Permalink to &quot;2. keywords&quot;">​</a></h2><p>项目关键词</p><h2 id="_3-author" tabindex="-1">3. author <a class="header-anchor" href="#_3-author" aria-label="Permalink to &quot;3. author&quot;">​</a></h2><p>项目作者</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">author</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name (http://barnyrubble.tumblr.com/)</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h2 id="_4-contributors" tabindex="-1">4. contributors <a class="header-anchor" href="#_4-contributors" aria-label="Permalink to &quot;4. contributors&quot;">​</a></h2><p>项目贡献者</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">contributors</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: [</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name &amp;lt;b@rubble.com&amp;gt; (http://barnyrubble.tumblr.com/)</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  ]</span></span></code></pre></div><h2 id="_5-homepage" tabindex="-1">5. homepage <a class="header-anchor" href="#_5-homepage" aria-label="Permalink to &quot;5. homepage&quot;">​</a></h2><p>项目主页地址</p><h2 id="_6-repository" tabindex="-1">6. repository <a class="header-anchor" href="#_6-repository" aria-label="Permalink to &quot;6. repository&quot;">​</a></h2><p>项目代码仓库地址</p><h2 id="_7-bugs" tabindex="-1">7. bugs <a class="header-anchor" href="#_7-bugs" aria-label="Permalink to &quot;7. bugs&quot;">​</a></h2><p>项目提交问题的地址</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//提交问题的地址和反馈的邮箱,url通常是Github中的issues页面</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bugs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://github.com/facebook/react/issues</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">email</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">xxxxx@xx.com</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_8-funding" tabindex="-1">8. funding <a class="header-anchor" href="#_8-funding" aria-label="Permalink to &quot;8. funding&quot;">​</a></h2><p>指定项目的资金支持方式和链接</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">funding</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">patreon</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://www.patreon.com/my-module</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h1 id="三、依赖配置" tabindex="-1">三、依赖配置 <a class="header-anchor" href="#三、依赖配置" aria-label="Permalink to &quot;三、依赖配置&quot;">​</a></h1><h2 id="_1-dependencies" tabindex="-1">1. dependencies <a class="header-anchor" href="#_1-dependencies" aria-label="Permalink to &quot;1. dependencies&quot;">​</a></h2><p>生产环境的依赖包</p><p>如果不使用脱字符（^），安装的版本号固定；如果使用，则能安装当前大版本的最新版本，在package-lock.json中可查看当前实际安装的版本。</p><h2 id="_2-devdependencies" tabindex="-1">2. devDependencies <a class="header-anchor" href="#_2-devdependencies" aria-label="Permalink to &quot;2. devDependencies&quot;">​</a></h2><p>开发环境的依赖包，例如webpack、vite、babel、ESLint等。</p><h2 id="_3-peerdependencies" tabindex="-1">3. peerDependencies <a class="header-anchor" href="#_3-peerdependencies" aria-label="Permalink to &quot;3. peerDependencies&quot;">​</a></h2><p>对等依赖的作用：</p><ol><li><p>减小打包体积：例如使用react开发的组件库，安装react是必不可少的，而使用组件库的开发者，本地项目肯定安装了react，因此开发的组件库中不必把react打包进去（期望项目的使用者来提供这些模块的实现）。</p></li><li><p>版本一致性：使用你的组件库的开发者需要确保他们项目中安装了与你声明的对等依赖版本兼容的包，以确保组件库正常运行。</p></li></ol><p>示例：声明要使用组件库，需在项目中安装大于17.0.1版本的react</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">peerDependencies</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">react</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&amp;gt;17.0.1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_4-peerdependenciesmeta" tabindex="-1">4. peerDependenciesMeta <a class="header-anchor" href="#_4-peerdependenciesmeta" aria-label="Permalink to &quot;4. peerDependenciesMeta&quot;">​</a></h2><p>将对等依赖标记为可选，如果用户没有安装对等依赖，npm不会发出警告</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">peerDependenciesMeta</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">react</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">optional</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">//标记为可选</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_5-bundleddependencies" tabindex="-1">5. bundledDependencies <a class="header-anchor" href="#_5-bundleddependencies" aria-label="Permalink to &quot;5. bundledDependencies&quot;">​</a></h2><p>声明捆绑依赖项（使用情景较少）</p><h2 id="_6-optionaldependencies" tabindex="-1">6. optionalDependencies <a class="header-anchor" href="#_6-optionaldependencies" aria-label="Permalink to &quot;6. optionalDependencies&quot;">​</a></h2><p>声明可选依赖项（使用情景较少）</p><h2 id="_7-engines" tabindex="-1">7. engines <a class="header-anchor" href="#_7-engines" aria-label="Permalink to &quot;7. engines&quot;">​</a></h2><p>声明对npm或node的版本要求</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">engines</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&amp;gt;=8.10.3 &amp;lt;12.13.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">npm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&amp;gt;=6.9.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>engines只是起一个说明的作用，即使用户安装的版本不符合要求，也不影响依赖包的安装。</p><h2 id="_8-workspaces" tabindex="-1">8. workspaces <a class="header-anchor" href="#_8-workspaces" aria-label="Permalink to &quot;8. workspaces&quot;">​</a></h2><p>单个代码库中统一管理多个包（monorepo），在workspaces声明目录下的package会软链到根目录的node_modules中。</p><h3 id="_1-初始化项目" tabindex="-1">1. 初始化项目 <a class="header-anchor" href="#_1-初始化项目" aria-label="Permalink to &quot;1. 初始化项目&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">npm init </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">y</span></span></code></pre></div><h3 id="_2-声明本项目是workspaces模式" tabindex="-1">2. 声明本项目是workspaces模式 <a class="header-anchor" href="#_2-声明本项目是workspaces模式" aria-label="Permalink to &quot;2. 声明本项目是workspaces模式&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">private</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">workspaces</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: [</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">packages/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">  ]</span><span style="color:#89DDFF;">,</span></span></code></pre></div><p>表示所有子包都在packages文件夹下</p><h3 id="_3-创建子包p1" tabindex="-1">3. 创建子包p1 <a class="header-anchor" href="#_3-创建子包p1" aria-label="Permalink to &quot;3. 创建子包p1&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">npm init </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">w packages</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">p1 </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">y</span></span></code></pre></div><p>在node_modules/.package-lock.json中可以看到 &quot;link&quot;: true 链接符号信息</p><h3 id="_4-新建packages-p1-index-js" tabindex="-1">4. 新建packages/p1/index.js <a class="header-anchor" href="#_4-新建packages-p1-index-js" aria-label="Permalink to &quot;4. 新建packages/p1/index.js&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">p1包</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_5-创建子包p2" tabindex="-1">5. 创建子包p2 <a class="header-anchor" href="#_5-创建子包p2" aria-label="Permalink to &quot;5. 创建子包p2&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">npm init </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">w packages</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">p2 </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">y</span></span></code></pre></div><h3 id="_6-将子包p1添加到p2中" tabindex="-1">6. 将子包p1添加到p2中 <a class="header-anchor" href="#_6-将子包p1添加到p2中" aria-label="Permalink to &quot;6. 将子包p1添加到p2中&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">npm i p1 </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">w p2</span></span></code></pre></div><p>安装，卸载等命令都是一样的，只是多了&quot;--workspace=&quot;参数（简写-w），用来指定在哪个包中执行命令</p><h3 id="_7-子包p2使用p1" tabindex="-1">7. 子包p2使用p1 <a class="header-anchor" href="#_7-子包p2使用p1" aria-label="Permalink to &quot;7. 子包p2使用p1&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> p1 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">p1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">使用</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> p1)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">p2包</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>workspaces功能与lerna类似，如果只需简单地管理多个包，workspaces足够了。lerna具有版本管理，发包提示，简化多包项目发布流程等更多功能。</p><h1 id="四、脚本配置" tabindex="-1">四、脚本配置 <a class="header-anchor" href="#四、脚本配置" aria-label="Permalink to &quot;四、脚本配置&quot;">​</a></h1><h2 id="_1-scripts" tabindex="-1">1. scripts <a class="header-anchor" href="#_1-scripts" aria-label="Permalink to &quot;1. scripts&quot;">​</a></h2><p>脚本入口</p><h2 id="_2-config" tabindex="-1">2. config <a class="header-anchor" href="#_2-config" aria-label="Permalink to &quot;2. config&quot;">​</a></h2><p>用于定义项目的配置项，例如设置环境变量</p><h3 id="_1-config-配置" tabindex="-1">1. config 配置 <a class="header-anchor" href="#_1-config-配置" aria-label="Permalink to &quot;1. config 配置&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">config</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">baseUrl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://example.com</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_2-scripts-配置" tabindex="-1">2. scripts 配置 <a class="header-anchor" href="#_2-scripts-配置" aria-label="Permalink to &quot;2. scripts 配置&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node index.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span></code></pre></div><h3 id="_3-新建index-js" tabindex="-1">3. 新建index.js <a class="header-anchor" href="#_3-新建index-js" aria-label="Permalink to &quot;3. 新建index.js&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//使用p<wbr>rocess.env.npm_package_config_XXX取值</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(process</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">env</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">npm_package_config_baseUrl)</span></span></code></pre></div>`,84)),a("p",null,[s[0]||(s[0]=n("运行 npm run start，终端打印出 ")),a("a",c,"example.com",512)]),s[3]||(s[3]=o(`<h1 id="五、文件-目录" tabindex="-1">五、文件&amp;目录 <a class="header-anchor" href="#五、文件-目录" aria-label="Permalink to &quot;五、文件&amp;amp;目录&quot;">​</a></h1><h2 id="_1-module-非官方字段" tabindex="-1">1. module（非官方字段） <a class="header-anchor" href="#_1-module-非官方字段" aria-label="Permalink to &quot;1. module（非官方字段）&quot;">​</a></h2><p>指定 ES 模块入口文件</p><p>示例：当其他开发者在他们的项目中导入你的包时，会加载并执行包中的dist/index.esm.js</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist/index.esm.js</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h2 id="_2-main" tabindex="-1">2. main <a class="header-anchor" href="#_2-main" aria-label="Permalink to &quot;2. main&quot;">​</a></h2><p>指定 CommonJS 模块或 ES 模块入口文件。如果不指定该字段，默认是根目录下的index.js</p><p>提示：从 Node.js 12.20.0 版本开始，&quot;main&quot; 字段也可以指定 ES 模块的入口文件</p><h2 id="_3-browser" tabindex="-1">3. browser <a class="header-anchor" href="#_3-browser" aria-label="Permalink to &quot;3. browser&quot;">​</a></h2><p>指定浏览器使用的入口文件，例如umd模块。</p><h2 id="_4-types-非官方字段" tabindex="-1">4. types（非官方字段） <a class="header-anchor" href="#_4-types-非官方字段" aria-label="Permalink to &quot;4. types（非官方字段）&quot;">​</a></h2><p>指定 TypeScript 类型声明文件（.d.ts 文件）的路径</p><h2 id="_5-exports-非官方字段" tabindex="-1">5. exports（非官方字段） <a class="header-anchor" href="#_5-exports-非官方字段" aria-label="Permalink to &quot;5. exports（非官方字段）&quot;">​</a></h2><p>当打包工具支持exports字段时（webpack、Rollup 等），以上main，browser，module，types四个字段都被忽略</p><p>&quot;.&quot; 表示默认导出</p><p>&quot;import&quot;: 指定了 ES module (ESM) 规范下的导出文件路径</p><p>&quot;require&quot;: 指定了 CommonJS 规范下的导出文件路径</p><p>&quot;browser&quot;: 指定了用于浏览器环境的导出文件路径</p><p>&quot;types&quot;: 指定了类型声明文件的路径</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">exports</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">import</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist/index.esm.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">require</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist/index.cjs.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">browser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist/index.umd.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">types</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist/index.d.ts</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>导出其他文件，例如除了导出默认路径，导出源文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">exports</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">:</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> : </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./src/main.js</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">},</span></span></code></pre></div><p>其他项目中使用</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> main </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">packageName</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// . 方式定义的</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> main </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">packageName/main</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// ./main 方式定义的</span></span></code></pre></div><h2 id="_6-type-非官方字段" tabindex="-1">6. type（非官方字段） <a class="header-anchor" href="#_6-type-非官方字段" aria-label="Permalink to &quot;6. type（非官方字段）&quot;">​</a></h2><p>指定模块系统的使用方式，&quot;commonjs&quot;，&quot;module&quot;，&quot;umd&quot;，&quot;json&quot;</p><p>示例：指定模块系统为ES module模式，使用CommonJS文件时，需显式的定义为 .cjs 文件扩展名，来明确指定这些文件为 CommonJS 模块</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h2 id="_7-files" tabindex="-1">7. files <a class="header-anchor" href="#_7-files" aria-label="Permalink to &quot;7. files&quot;">​</a></h2><p>指定哪些包被推送到npm服务器中</p><p>示例：只推送index.js和dist包到npm服务器</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">files</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: [</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  ]</span><span style="color:#89DDFF;">,</span></span></code></pre></div><p>可以在项目根目录新建一个.npmignore文件，说明不需要提交到npm服务器的文件，类似.gitignore。写在这个文件中的文件即便被写在files属性里也会被排除在外</p><h2 id="_8-bin" tabindex="-1">8. bin <a class="header-anchor" href="#_8-bin" aria-label="Permalink to &quot;8. bin&quot;">​</a></h2><p>定义在全局安装时可执行的命令（使用情景较少）</p><h2 id="_9-man" tabindex="-1">9. man <a class="header-anchor" href="#_9-man" aria-label="Permalink to &quot;9. man&quot;">​</a></h2><p>Linux 中的帮助指令（使用情景较少）</p><h2 id="_10-directories" tabindex="-1">10. directories <a class="header-anchor" href="#_10-directories" aria-label="Permalink to &quot;10. directories&quot;">​</a></h2><p>定义项目目录结构的字段（使用情景较少）</p><h1 id="六、发布配置" tabindex="-1">六、发布配置 <a class="header-anchor" href="#六、发布配置" aria-label="Permalink to &quot;六、发布配置&quot;">​</a></h1><h2 id="_1-private" tabindex="-1">1. private <a class="header-anchor" href="#_1-private" aria-label="Permalink to &quot;1. private&quot;">​</a></h2><p>防止私有包发布到npm服务器，要发布到npm上设为false</p><h2 id="_2-preferglobal-非官方字段" tabindex="-1">2. preferGlobal（非官方字段） <a class="header-anchor" href="#_2-preferglobal-非官方字段" aria-label="Permalink to &quot;2. preferGlobal（非官方字段）&quot;">​</a></h2><p>当设置 &quot;preferGlobal&quot; 字段为 true 时，它表示你的包更适合以全局方式安装，而不是作为项目的依赖项进行本地安装。</p><p>这个字段的设置是为了向用户传达关于你的包的最佳使用方式的建议。它并不会直接影响包的安装方式或包管理器的行为。</p><h2 id="_3-publishconfig" tabindex="-1">3. publishConfig <a class="header-anchor" href="#_3-publishconfig" aria-label="Permalink to &quot;3. publishConfig&quot;">​</a></h2><p>在发布包时指定特定的配置</p><p>示例：指定包发布的注册表 URL，指定所有用户都可以访问（私有的会收费）</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">publishConfig</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">registry</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://registry.npmjs.org/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">access</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">public</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_4-os" tabindex="-1">4. os <a class="header-anchor" href="#_4-os" aria-label="Permalink to &quot;4. os&quot;">​</a></h2><p>指定你的包适用的操作系统</p><p>示例：包只适用于darwin（macOS）和 linux</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">os</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">darwin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">linux</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span></span></code></pre></div><p>示例：禁用win32</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">os</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">!win32</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">] </span><span style="color:#676E95;font-style:italic;">//禁用的操作系统</span></span></code></pre></div><h2 id="_5-cpu" tabindex="-1">5. cpu <a class="header-anchor" href="#_5-cpu" aria-label="Permalink to &quot;5. cpu&quot;">​</a></h2><p>该配置和OS配置类似，用CPU可以更准确的限制用户的安装环境</p><h2 id="_6-license" tabindex="-1">6. license <a class="header-anchor" href="#_6-license" aria-label="Permalink to &quot;6. license&quot;">​</a></h2><p>指定软件的开源协议：</p><p>ISC：在所有副本中保留版权声明和许可证声明，使用者就可以拿你的代码做任何想做的事情，你也无需承担任何责任</p><p>MIT：在所有副本或主要部分中保留版权声明和许可证声明，使用者就可以拿你的代码做任何想做的事情，你也无需承担任何责任</p>`,61)),a("p",null,[s[1]||(s[1]=n("开源协议查询地址：")),a("a",i,"opensource.org/licenses/",512)]),s[4]||(s[4]=o(`<h1 id="七、第三方配置-非官方字段" tabindex="-1">七、第三方配置（非官方字段） <a class="header-anchor" href="#七、第三方配置-非官方字段" aria-label="Permalink to &quot;七、第三方配置（非官方字段）&quot;">​</a></h1><h2 id="_1-eslintconfig" tabindex="-1">1. eslintConfig <a class="header-anchor" href="#_1-eslintconfig" aria-label="Permalink to &quot;1. eslintConfig&quot;">​</a></h2><p>eslint的配置，更推荐新建 .eslintrc 进行配置</p><p>使用参考：<a href="https://juejin.cn/post/7228978346502946874#heading-16" target="_blank" title="https://juejin.cn/post/7228978346502946874#heading-16">新建 .eslintrc</a></p><h2 id="_2-babel" tabindex="-1">2. babel <a class="header-anchor" href="#_2-babel" aria-label="Permalink to &quot;2. babel&quot;">​</a></h2><p>babel的配置，更推荐新建 .babelrc 进行配置</p><h2 id="_3-unpkg" tabindex="-1">3. unpkg <a class="header-anchor" href="#_3-unpkg" aria-label="Permalink to &quot;3. unpkg&quot;">​</a></h2><p>unpkg 是一个基于 CDN 的前端包托管服务，用于在浏览器中直接引用和加载 npm 上发布的包。</p><p>无需下载，直接通过 <code>&lt;script&gt;</code> 标签引用</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">script src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://unpkg.com/package-name@version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#BABED8;">lt</span><span style="color:#89DDFF;">;/</span><span style="color:#BABED8;">script</span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">gt</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="_4-lint-staged" tabindex="-1">4. lint-staged <a class="header-anchor" href="#_4-lint-staged" aria-label="Permalink to &quot;4. lint-staged&quot;">​</a></h2><p>lint-staged是一个在Git暂存文件上运行linters的工具，通常配合gitHooks一起使用。</p><p>使用参考：<a href="https://juejin.cn/post/7228978346502946874#heading-22" target="_blank" title="https://juejin.cn/post/7228978346502946874#heading-22">配置 husky、lint-staged、@commitlint/cli</a></p><h2 id="_5-browserslist" tabindex="-1">5. browserslist <a class="header-anchor" href="#_5-browserslist" aria-label="Permalink to &quot;5. browserslist&quot;">​</a></h2><p>告知支持哪些浏览器及版本，Autoprefixer常用到它</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">browserslist</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: [</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">defaults</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">not ie &amp;lt; 8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">last 2 versions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&amp;gt; 1%</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">iOS 7</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">last 3 iOS versions</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  ]</span></span></code></pre></div><h2 id="_6-sideeffects" tabindex="-1">6. sideEffects <a class="header-anchor" href="#_6-sideeffects" aria-label="Permalink to &quot;6. sideEffects&quot;">​</a></h2><p>指示包是否具有副作用，协助Webpack，Rollup等进行tree shaking</p><p>多数情况下可以直接设置为false，这样打包工具就会自动删除未被import的代码</p><p>但是有些情况例外</p><ol><li><p>有一些特定的模块文件，它们执行一些副作用操作，如注册全局事件监听器、修改全局状态等。</p></li><li><p>告诉构建工具不要将样式文件排除在无用代码消除的优化范围之外</p></li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sideEffects</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./path/to/module.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*.css</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span></span></code></pre></div>`,22))])])}const b=l(t,[["render",D]]);export{B as __pageData,b as default};
