import{_ as e,o as i,c as p,S as n}from"./chunks/framework.7114eebe.js";const h=JSON.parse('{"title":"uni-app","description":"","frontmatter":{"title":"uni-app","config":{"dir":true},"password":true},"headers":[],"relativePath":"views/interview/Uniapp.md","filePath":"views/interview/Uniapp.md"}'),u={name:"views/interview/Uniapp.md"};function t(r,a,o,l,s,d){return i(),p("div",null,a[0]||(a[0]=[n('<h4 id="_1-uni-app是什么" tabindex="-1">1.uni-app是什么？ <a class="header-anchor" href="#_1-uni-app是什么" aria-label="Permalink to &quot;1.uni-app是什么？&quot;">​</a></h4><p>是一个使用 <code class="default">Vue.js</code> 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、Web（响应式）、以及各种小程序（微信/支付宝/百度/头条/飞书/QQ/快手/钉钉/淘宝）、快应用等多个平台的跨平台工具</p><h4 id="_2-uni-app的原理是什么" tabindex="-1">2.uni-app的原理是什么？ <a class="header-anchor" href="#_2-uni-app的原理是什么" aria-label="Permalink to &quot;2.uni-app的原理是什么？&quot;">​</a></h4><p>条件编译</p><h4 id="_3-关于uni-app的ui库、ui框架、ui组件" tabindex="-1">3.关于uni-app的ui库、ui框架、ui组件 <a class="header-anchor" href="#_3-关于uni-app的ui库、ui框架、ui组件" aria-label="Permalink to &quot;3.关于uni-app的ui库、ui框架、ui组件&quot;">​</a></h4><p><code class="default">uni-app</code>是有内置组件的，不像常规的web开发一样需要去套用第三方ui组件库，但<code class="default">uni-app</code>体系不是这样，内置组件就是为手机优化的。</p><p>但内置组件只能满足基础需求，更多场景，需要扩展组件。扩展组件是基于内置组件的二次封装，从性能上来讲，扩展组件的性能略低于内置组件，所以开发者切勿抛弃内置组件，直接全套用三方UI组件库。</p><p>众多扩展组件如何选择？组件分2大类：</p><ul><li>1、vue组件（文件后缀为vue）</li><li>2、小程序自定义组件（文件后缀为wxml或其他小程序平台特有后缀名称）</li></ul><img src="https://cdn.chenyingshuang.cn/interview/uni-app/1.jpg"><h4 id="_4-uni-app-全局变量" tabindex="-1">4.uni-app 全局变量 <a class="header-anchor" href="#_4-uni-app-全局变量" aria-label="Permalink to &quot;4.uni-app 全局变量&quot;">​</a></h4><p>用<code class="default">vuex</code>或者<code class="default">globalData</code></p>',12)]))}const f=e(u,[["render",t]]);export{h as __pageData,f as default};
