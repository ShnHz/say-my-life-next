import{_ as s,c as a,o as n,V as l}from"./chunks/framework.79590ae5.js";const g=JSON.parse('{"title":"git 忽略已提交文件的修改","description":"","frontmatter":{"date":"2020-05-08 15:05","config":{"top":false,"dir":false,"tag":["git"],"valine":true,"valineId":"/blog/git/UpdateIndex.html"},"title":"git 忽略已提交文件的修改","outline":[3,5]},"headers":[],"relativePath":"views/blog/git/UpdateIndex.md"}'),e={name:"views/blog/git/UpdateIndex.md"},p=l(`<p>我们在使用git中，经常会遇到这样的情况：</p><p>git仓库中有某个必要的配置文件，这个文件应该存在，但是在每个开发人员的本地都要对他进行修改。这就导致这个文件要被反复修改，容易冲突。要想不冲突，就要每个人提交前，都刻意不提交该文件，很是麻烦。</p><p>一般我们这时候就会想到，用<code class="default">.gitignore</code>来忽略这个文件，但是该文件是已经提交过的，并且对于工程是必要的，应该保存在git中的。<code class="default">.gitignore</code>对于这种已提交过的文件是无能为力的，修改后会将git仓库的文件也删除了，这明显不是我们的需求。</p><p>这时候，就需要使用<code class="default">git update-index --skip-worktree</code>命令了</p><p>该命令的作用是，让git在搜索文件列表时，忽略某个文件，这样该文件即使有修改，git也不会关心。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#例子：</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">update-index</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--skip-worktree</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">filepath</span></span></code></pre></div><p>使用这个命令，时间久了，可能会忘记自己忽略过哪些文件，这时候可以使用<code class="default">git ls-files -v . | grep &quot;^S&quot;</code> / <code class="default">git ls-files -v . | findstr &quot;^S&quot;</code>命令找出来忽略过的文件。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#例子：Linux</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ls-files</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">grep</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^S</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#例子：Windows</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ls-files</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">findstr</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^S</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#输出：S filepath</span></span></code></pre></div><p>不想继续忽略该文件时，使用<code class="default">git update-index --no-skip-worktree</code>命令，来让git不再忽略该文件。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#例子：</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">update-index</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--no-skip-worktree</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">web/main.dart</span></span></code></pre></div>`,10),o=[p];function t(c,i,r,C,d,y){return n(),a("div",null,o)}const A=s(e,[["render",t]]);export{g as __pageData,A as default};
