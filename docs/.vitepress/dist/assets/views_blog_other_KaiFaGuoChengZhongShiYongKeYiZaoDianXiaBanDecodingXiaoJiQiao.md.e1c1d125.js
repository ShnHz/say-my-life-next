import{_ as s,c as a,o as n,V as l}from"./chunks/framework.f518e559.js";const i=JSON.parse('{"title":"开发过程中使用，可以早点下班的coding小技巧","description":"","frontmatter":{"title":"开发过程中使用，可以早点下班的coding小技巧","date":"2023/03/01 12:15:35","summary":null,"config":{"show":true,"top":false,"dir":true,"dirTag":["h3","h4","h5"],"tag":["js","css","info"],"valine":true,"valineId":null},"password":false,"outline":[3,5]},"headers":[],"relativePath":"views/blog/other/KaiFaGuoChengZhongShiYongKeYiZaoDianXiaBanDecodingXiaoJiQiao.md"}'),o={name:"views/blog/other/KaiFaGuoChengZhongShiYongKeYiZaoDianXiaBanDecodingXiaoJiQiao.md"},p=l(`<h6 id="原文-掘金" tabindex="-1">原文 <a href="https://juejin.cn/post/7172088772257906725" target="_blank" rel="noreferrer">掘金</a> <a class="header-anchor" href="#原文-掘金" aria-label="Permalink to &quot;原文 [掘金](https://juejin.cn/post/7172088772257906725)&quot;">​</a></h6><div class="markdown-body cache"><p><em><strong>本文正在参加<a href="https://juejin.cn/post/7162096952883019783" title="https://juejin.cn/post/7162096952883019783" target="_blank">「金石计划 . 瓜分6万现金大奖」</a></strong></em></p><h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h1><p>在实际开发过程中，通过时间的沉淀，一些老人常常能写出一些让小白大吃一惊“骚操作”，那些“骚操作”通常简单的离谱，却能做很多事，属实是让很多新人摸不着头脑。</p><blockquote><p>做一件事时间长了，技巧也就有了。</p></blockquote><p>下面来个情景小剧场：</p><p>初入职场小鱼仔：这傻逼是不是写错了，~~ str？？（一看提交记录老大，捂住小嘴）</p><p>......尝试尝试尝试.......（大写的吃惊浮现在脸上）</p><p>初入职场小鱼仔：“卧槽，卧槽，卧槽，这都可以？有点离谱！牛逼！牛逼！属实牛逼！”（窃喜，嘻嘻，我学会了，可以去和小布仔装逼了！迫不及待的想找小布仔装逼的心情谁懂？）</p><p>这样的场景至今历历在目，一次又一次之后，小鱼仔长大了，变成了老油条。下面为大家分享一下“骚操作”合集。</p><blockquote><p>程序员的信仰是：最少的代码，做最多的事。</p></blockquote><h1 id="应用场景" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景" aria-label="Permalink to &quot;应用场景&quot;">​</a></h1><h2 id="场景一-将一个字符串变成数字" tabindex="-1">场景一：将一个字符串变成数字 <a class="header-anchor" href="#场景一-将一个字符串变成数字" aria-label="Permalink to &quot;场景一：将一个字符串变成数字&quot;">​</a></h2><p>常规操作</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(str))   </span><span style="color:#676E95;font-style:italic;">//2</span></span></code></pre></div><h3 id="骚操作一" tabindex="-1">骚操作一 <a class="header-anchor" href="#骚操作一" aria-label="Permalink to &quot;骚操作一&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">~~</span><span style="color:#A6ACCD;">str)    </span><span style="color:#676E95;font-style:italic;">//2</span></span></code></pre></div><h3 id="解析" tabindex="-1">解析： <a class="header-anchor" href="#解析" aria-label="Permalink to &quot;解析：&quot;">​</a></h3><p><strong>js中有~是按位取反运算,~~ 用来作双非按位取反运算</strong></p><p>~~ 的作用是去掉小数部分,对于正数，向下取整；对于负数，向上取整；与Math.floor()不同的是，它只是单纯的去掉小数部分，不论正负都不会改变整数部分</p><p>非数字取值为0，它具体为</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">~~null;</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">// =&amp;gt; 0</span></span>
<span class="line"><span style="color:#89DDFF;">~~undefined;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// =&amp;gt; 0</span></span>
<span class="line"><span style="color:#89DDFF;">--NaN;</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;font-style:italic;">// =&amp;gt; 0</span></span>
<span class="line"><span style="color:#89DDFF;">~~</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;">// =&amp;gt; 0</span></span>
<span class="line"><span style="color:#89DDFF;">~~{};</span><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">// =&amp;gt; 0</span></span>
<span class="line"><span style="color:#89DDFF;">~~</span><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">// =&amp;gt; 0</span></span>
<span class="line"><span style="color:#89DDFF;">~~</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;">// =&amp;gt; 0</span></span>
<span class="line"><span style="color:#89DDFF;">~~</span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;">// =&amp;gt; 0</span></span>
<span class="line"><span style="color:#89DDFF;">~~</span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">// =&amp;gt; 1</span></span>
<span class="line"><span style="color:#89DDFF;">~~</span><span style="color:#F78C6C;">1.9</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;font-style:italic;">// =&amp;gt; 1</span></span>
<span class="line"><span style="color:#89DDFF;">~~-</span><span style="color:#F78C6C;">1.9</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">// =&amp;gt; -1</span></span></code></pre></div><h3 id="骚操作二" tabindex="-1">骚操作二 <a class="header-anchor" href="#骚操作二" aria-label="Permalink to &quot;骚操作二&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">str)    </span><span style="color:#676E95;font-style:italic;">//2</span></span></code></pre></div><h3 id="解析-1" tabindex="-1">解析： <a class="header-anchor" href="#解析-1" aria-label="Permalink to &quot;解析：&quot;">​</a></h3><p><strong>JS中的 &#39;+&#39; 号</strong></p><p>当用作单目操作符的时候，+操作符不会对Number类型产生影响。但如果应用在字符串类型上，会将其转换为数字：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;">&amp;nbsp</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">25</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=+</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(a)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//25</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">50</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">typeof&amp;</span><span style="color:#A6ACCD;">nbsp;b)</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//String</span></span>
<span class="line"><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">=+</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">typeof&amp;</span><span style="color:#A6ACCD;">nbsp;b)</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//Number</span></span></code></pre></div><p>通常使用+操作符可以快速地将字符串转换为数字。但是如果字符串字面量无法转化为数字的话，结果会出人意料：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;">&amp;nbsp</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">kangkang</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=+</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(a) </span><span style="color:#676E95;font-style:italic;">//NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">typeof&amp;</span><span style="color:#A6ACCD;">nbsp;a)</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//Number</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">=+</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(b)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//0</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">typeof&amp;</span><span style="color:#A6ACCD;">nbsp;b)</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;&amp;</span><span style="color:#A6ACCD;">nbsp</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//Number</span></span></code></pre></div><h2 id="场景二-数组扁平化" tabindex="-1">场景二：数组扁平化 <a class="header-anchor" href="#场景二-数组扁平化" aria-label="Permalink to &quot;场景二：数组扁平化&quot;">​</a></h2><p>常规操作</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">，</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">]]]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">flatten</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">some</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">item</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#A6ACCD;">gt</span><span style="color:#F07178;">; </span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">item</span><span style="color:#F07178;">))) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">arr</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> []</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">concat</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">arr</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">flatten</span><span style="color:#A6ACCD;">(arr))</span><span style="color:#676E95;font-style:italic;">// [1, 2, 3, 4，5]</span></span></code></pre></div><h3 id="骚操作" tabindex="-1">骚操作 <a class="header-anchor" href="#骚操作" aria-label="Permalink to &quot;骚操作&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">]]]</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flat</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">Infinity</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [1, 2, 3, 4，5]</span></span></code></pre></div><h3 id="解析-2" tabindex="-1">解析 <a class="header-anchor" href="#解析-2" aria-label="Permalink to &quot;解析&quot;">​</a></h3><p><strong>ES6中的flat</strong> 我们还可以直接调用 <code>ES6 </code>中的<code>flat</code>方法来实现数组扁平化。<code>flat </code>方法的语法：<code>arr.flat ( [depth] )</code> 其中<code>depth</code>是<code>flat</code>的参数，<code>depth </code>是可以传递数组的展开深度（默认不填、数值是 <code>1</code>），即展开一层数组。如果层数不确定，参数可以传进 <code>Infinity</code>，代表不论多少层都要展开：</p><h2 id="场景三-扩展运算符的应用" tabindex="-1">场景三：扩展运算符的应用 <a class="header-anchor" href="#场景三-扩展运算符的应用" aria-label="Permalink to &quot;场景三：扩展运算符的应用&quot;">​</a></h2><h3 id="_1-数组去重" tabindex="-1">1.数组去重 <a class="header-anchor" href="#_1-数组去重" aria-label="Permalink to &quot;1.数组去重&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> setArr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#A6ACCD;">(arr)            </span><span style="color:#676E95;font-style:italic;">// 返回set数据结构Set(3) {3, 5, 2} </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//方法一 es6的...解构 </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> unique1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">setArr ]</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;">//去重转数组后 [3,5,2] </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//方法二 Array.from()解析类数组为数组 </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> unique2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(setArr )    </span><span style="color:#676E95;font-style:italic;">//去重转数组后 [3,5,2]</span></span></code></pre></div><h3 id="_2-字符串去重" tabindex="-1">2.字符串去重 <a class="header-anchor" href="#_2-字符串去重" aria-label="Permalink to &quot;2.字符串去重&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">352255</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> unique </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">...new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#A6ACCD;">(str)]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 352</span></span></code></pre></div><h3 id="_3-实现并集、交集、和差集" tabindex="-1">3.实现并集、交集、和差集 <a class="header-anchor" href="#_3-实现并集、交集、和差集" aria-label="Permalink to &quot;3.实现并集、交集、和差集&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 并集 </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> union </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">b])</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Set {1, 2, 3, 4} </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 交集 </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> intersect </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">a]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#A6ACCD;">(x </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#A6ACCD;">gt; b</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has</span><span style="color:#A6ACCD;">(x)))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// set {2, 3} </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// （a 相对于 b 的）差集 </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> difference </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">a]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#A6ACCD;">(x </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#A6ACCD;">gt; </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has</span><span style="color:#A6ACCD;">(x)))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Set {1}</span></span></code></pre></div><h3 id="_4-将伪数组转化为数组" tabindex="-1">4.将伪数组转化为数组 <a class="header-anchor" href="#_4-将伪数组转化为数组" aria-label="Permalink to &quot;4.将伪数组转化为数组&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//伪数组转换为数组</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> nodeList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelectorAll</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">nodeList])</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// [div, div, div ... ]</span></span></code></pre></div><h3 id="_5-配合rest-运算符应用" tabindex="-1">5.配合rest 运算符应用 <a class="header-anchor" href="#_5-配合rest-运算符应用" aria-label="Permalink to &quot;5.配合rest 运算符应用&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sumRest</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(...</span><span style="color:#A6ACCD;font-style:italic;">m</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">total</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">of</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">m</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">total</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">total</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">sumRest</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//6</span></span></code></pre></div><h3 id="_6-数组排序" tabindex="-1">6.数组排序 <a class="header-anchor" href="#_6-数组排序" aria-label="Permalink to &quot;6.数组排序&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> sortNumbers </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">numbers) </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#A6ACCD;">gt</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> numbers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sort</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="场景四-网站置灰" tabindex="-1">场景四：网站置灰 <a class="header-anchor" href="#场景四-网站置灰" aria-label="Permalink to &quot;场景四：网站置灰&quot;">​</a></h2><p><strong>CSS滤镜 -webkit-filter</strong></p><p>一行代码足以</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">html</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">gray-mode</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">filter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">grayscale</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">.95</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">-webkit-filter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">grayscale</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">.95</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">blur 模糊-webkit-filter:blur(2px);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">brightness 亮度-webkit-filter:brightness(25%);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">contrast 对比度-webkit-filter: contrast(50%);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">drop-shadow</span><span style="color:#A6ACCD;"> 阴影-webkit-filter: drop-shadow(5px 5px 5px rgba(0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 0</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">5</span><span style="color:#A6ACCD;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">opacity 透明度-webkit-filter: opacity(50%);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">grayscale 灰度-webkit-filter: grayscale(80%);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">sepia 褐色-webkit-filter: sepia(100%);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">invert 反色-webkit-filter: invert(100%);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">hue-rotate</span><span style="color:#A6ACCD;"> 色相旋转-webkit-filter:hue-rotate(180deg);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">saturate 饱和度-webkit-filter: saturate(1000%);</span></span></code></pre></div><h2 id="场景五-如何写出好函数" tabindex="-1">场景五：如何写出好函数 <a class="header-anchor" href="#场景五-如何写出好函数" aria-label="Permalink to &quot;场景五：如何写出好函数&quot;">​</a></h2><h3 id="_1-默认参数-在你的函数中使用默认参数" tabindex="-1">1.默认参数-在你的函数中使用默认参数 <a class="header-anchor" href="#_1-默认参数-在你的函数中使用默认参数" aria-label="Permalink to &quot;1.默认参数-在你的函数中使用默认参数&quot;">​</a></h3><p>避免在你的函数中使用短路或条件来保持更清洁。 更重要的是，请记住，你的函数只会为未定义的参数提供值， 默认值不会替换任何其他虚假值。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// BAD</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createMicrobrewery</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">breweryName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">KangKang</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// GOOD</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createMicrobrewery</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">KangKang</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_2-参数不宜过多-明智地使用函数参数" tabindex="-1">2.参数不宜过多-明智地使用函数参数 <a class="header-anchor" href="#_2-参数不宜过多-明智地使用函数参数" aria-label="Permalink to &quot;2.参数不宜过多-明智地使用函数参数&quot;">​</a></h3><p>尽量将函数参数的数量限制在<code>2</code>个或最多 <code>3 </code>个。如果它需要这么多参数，则可能是你的函数做的太多了。 但是，如果仍然需要它，请使用 <code>JavaScript</code> 对象作为参数。 为了使函数期望的属性变得明显，可以使用<code>ES6</code>解构语法。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// BAD</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createMenu</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">title</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">body</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">buttonText</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">cancellable</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">createMenu</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Bar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Baz</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// GOOD </span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createMenu</span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">title</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">body</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">buttonText</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">cancellable</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">createMenu</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Bar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">buttonText</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Baz</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">cancellable</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_3-单一职责原则-函数应该做一件事" tabindex="-1">3.单一职责原则-函数应该做一件事 <a class="header-anchor" href="#_3-单一职责原则-函数应该做一件事" aria-label="Permalink to &quot;3.单一职责原则-函数应该做一件事&quot;">​</a></h3><p>不要忘记函数的作用——为你的代码添加模块化。 每个只执行一项任务的较小函数将确保你的代码易于编写、测试和理解。 永远不要为单个功能设置多个目标。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// BAD</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">emailClients</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">clients</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">clients</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">client</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#A6ACCD;">gt</span><span style="color:#F07178;">; </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">    const </span><span style="color:#A6ACCD;">clientRecord</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">database</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">lookup</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">client</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">    if </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">clientRecord.isActive(</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">      </span><span style="color:#82AAFF;">email</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">client</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// GOOD </span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">emailActiveClients</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">clients</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">clients</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">isActiveClient</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">email</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">isActiveClient</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">client</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">clientRecord</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">database</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">lookup</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">client</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">clientRecord</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isActive</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></div>`,2),e=[p];function t(c,r,y,D,F,C){return n(),a("div",null,e)}const d=s(o,[["render",t]]);export{i as __pageData,d as default};
